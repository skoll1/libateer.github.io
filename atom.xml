<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李巴特儿de小屋子</title>
  <subtitle>...触之不动...</subtitle>
  <link href="/libateer.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/skoll1/libateer.github.io/"/>
  <updated>2017-03-10T16:06:15.000Z</updated>
  <id>https://github.com/skoll1/libateer.github.io/</id>
  
  <author>
    <name>李巴特儿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>css-基础</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/10/best-1-CSS%E5%9F%BA%E7%A1%80/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/10/best-1-CSS基础/</id>
    <published>2017-03-10T15:30:02.000Z</published>
    <updated>2017-03-10T16:06:15.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>小东西：淘宝，搭配，比较-游戏-社交-好的一部分-商品评论</li>
<li>你给我一个目标，我会马上调动我的知识库帮你完成这个，扩展，用某种观点。</li>
<li>字体–font-style:让字体变斜就这个。</li>
<li>font-weight:粗细就看这个</li>
<li>font-stretch:chrome不支持</li>
<li>@font-face{<br> font-family:’iconfont’;<br> src:url(‘’);<br>}引入字体。</li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;小东西：淘宝，搭配，比较-游戏-社交-好的一部分-商品评论&lt;/li&gt;
&lt;li&gt;你给我一个目标，我会马上调动我的知识库帮你完成这个，扩展，用某种观点。&lt;/li&gt;
&lt;li&gt;字体–font-style:让字体变斜就这个。&lt;/li&gt;
&lt;li&gt;font-weight:粗细
    
    </summary>
    
      <category term="Code" scheme="https://github.com/skoll1/libateer.github.io/categories/Code/"/>
    
    
      <category term="css-基础" scheme="https://github.com/skoll1/libateer.github.io/tags/css-%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>网站代码分析</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/10/best-1-%E7%BD%91%E7%AB%99%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/10/best-1-网站代码分析/</id>
    <published>2017-03-10T15:22:43.000Z</published>
    <updated>2017-03-10T15:27:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>###bootstrap###</p>
<ol>
<li><ol>
<li>书写格式</li>
</ol>
</li>
<li>.btn-default</li>
<li>badge:内联样式，徽章</li>
<li>hover,focus用一个属性</li>
<li>text-size-adjust:文字会根据设备的不同自动调整。</li>
<li>details标签可以和summary配合实现手风琴效果</li>
<li>template声明模板元素；</li>
<li>don：对特殊语或者短语的定义可以用dfn括起来。</li>
<li>mark突出显示的文本。。我去这个属性了</li>
<li>取得名字：navbar</li>
<li>为什么他的代码格式那么简单，嵌套关系也没那么复杂。</li>
<li><blockquote>
<p>这是什么意思,表示从属关系都是这样的来用的。</p>
</blockquote>
</li>
<li>tr.info是指的自己的还是他下面的子元素呢？</li>
<li>下面的子元素都加上他的父元素的名字—-这样就简单多了。还可以表示关系。</li>
<li>一个页面需要的css</li>
<li>margin-right:负值是什么意思？</li>
<li>output输出标签。</li>
<li>自适应品均分配用的是百分比，想分几份就除几。</li>
<li>left,right,margin-left,margin-right.还可以像上面那样加半分比，是位置么？</li>
<li>*.html,body,input,button,select,textarea, a,figure,img,hr,</li>
<li>:focus{border-color,outline,box-shadow,}</li>
<li>::后面加尾类元素-ms-input-placeholder{}-webkit-input-placherholder{}</li>
<li>还是语义化起名字看起来，input-lg/has-success .help-block.就是那种你直接看css都可以知道你的样式是什么样。</li>
<li>到底是要一个一个的看属性呢？还是结合具体问题看实践。两个都来吧？在做东西的时候自己用到的争取都弄明白。。</li>
<li>pre:定义预格式化文本，显示特殊符号。<ol>
<li>appearance：使元素看上去向某个东西：button,icon,window,menu.</li>
<li>orphans:设置或检索对象内容内一定要留在一页范围地段以内的行的最少数量</li>
</ol>
</li>
</ol>
<p>   ###火狐###</p>
<ol>
<li>主体结构：window- browser - html—head-body-script <ol>
<li>head;</li>
<li>body:div-script;</li>
<li>div-header/dir/footer</li>
<li>header-layout-fleft/fright</li>
<li>fleft-logo-top/bottom   div-p-a/span</li>
<li>dir-left-banner/menu</li>
<li>css命名规范：<br>###淘宝###</li>
</ol>
<ul>
<li>div+p+gq</li>
<li>div&gt;p&gt;span+em</li>
<li>ul&gt;li.item$*5</li>
<li>form#search.wide</li>
<li>p.class1.class2.class3</li>
<li>ul&gt;.class</li>
<li>table&gt;.row&gt;.col自动补全结构</li>
<li>a:link</li>
<li>a:mail</li>
<li>link:css</li>
<li>link:favicon</li>
<li>meta:vp</li>
<li>script:src</li>
<li>form:get</li>
<li>inp</li>
<li>input:t</li>
<li>input:time</li>
<li>btn:b</li>
<li>btn:r</li>
<li>btn:s</li>
<li>ol+</li>
<li>ul+</li>
<li>table+</li>
<li>select+</li>
<li>cc:ie6</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###bootstrap###&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;书写格式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;.btn-default&lt;/li&gt;
&lt;li&gt;badge:内联样式，徽章&lt;/li&gt;
&lt;li&gt;hover,focus用一个属性&lt;/li&gt;
&lt;li&gt;te
    
    </summary>
    
    
      <category term=" 网站代码分析" scheme="https://github.com/skoll1/libateer.github.io/tags/%E7%BD%91%E7%AB%99%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>自适应页面</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/10/best-1-%E8%87%AA%E9%80%82%E5%BA%94%E9%A1%B5%E9%9D%A2/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/10/best-1-自适应页面/</id>
    <published>2017-03-10T15:18:38.000Z</published>
    <updated>2017-03-10T15:21:18.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>box-sizing:border-box;</li>
<li>background-size:修改背景图片的唯一办法。可以使用多个背景图片，会带来意想不到的效果。</li>
<li>3个角度来考虑设计方案。</li>
<li>web design</li>
<li>meta标签。主要思想。调整列，弹性宽度，紧缩空白空间，调整字体大小，修改导航菜单。隐藏一些内容。</li>
<li>如何创建断点：也就是替换样式表的时候。（打开自适应设计，不断调整窗口大小，发现不美观的时候就可以了）</li>
<li>怎样替换载入样式表么？</li>
<li>media可以识别别的属性限制么？媒体查询支持的其他属性</li>
<li>弹性玩网格：宽度。100%。桌面：max-width:    布局的每一个列都应该用百分比。</li>
<li>HTML源代码的顺序的重要性，因为手机列显示的时候，可能是把float属性改一下。</li>
<li>自适应的图片问题：</li>
<li>只要你没有给每一个设计元素设计精确元素，宽度，高度，和位置，就会发现css定位属性是如此的强大，这些属性可以把蚊子显示在图片上，把LOGO放在网页的任何位置上。</li>
<li>绝对定位可以脱离文档流，以至于网页上的其他元素甚至不知道这个元素的存在。</li>
<li>相对定位：网页上的其他元素不会占用相对定位原来在HTML的位置。</li>
<li>浏览器兼容方法。</li>
<li>.img-wrap img{</li>
<li>max-width: 100%;</li>
<li>height: auto;</li>
<li>/<em>那就是可以实现自己的自适应轮播图了吧</em>/</li>
<li>}</li>
<li>基于cookie以及js的响应式图像。在服务器端根据用户的请求返回特定的图片</li>
<li>自适应视屏：在页面是可以支持百分比的，如果服务器端有类似的视屏那就更好了。</li>
<li>bili没有自适应视屏，只有两个格式，全屏和变小那个，先找到主要的东西展示出来，在小得时候把全部的信息给出来，然后你再自己变大看主要的，在变大的时候还可以加上自己想要展示的小的东西。</li>
<li>video{</li>
<li>max-width: 100%;</li>
<li>height:auto;</li>
<li>}</li>
<li>视屏托管网站比放自己托管更加安全，自己可能受到带宽的货磁盘空间的限制。这是通过iframe实现，如果是应用地址的话，使不得在他的网站打开这个啊。好像没有那个问题啊。</li>
<li><embed height="515" width="700" quality="high" allowfullscreen type="application/x-shockwave-flash" src="http://static.hdslb.com/miniloader.swf" flashvars="aid=7382789&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"></li>
<li>基于媒体查询的图像图像。在客户端调整选取图像，还是那个服务器的好，但是要是按照一开始的加载的来看的话。</li>
<li><form action=""></form></li>
<li><select name="URL" onchange="location.href=this.form.URL.options[this.form.URL.selectedIndex].value"></select></li>
<li><option value="1.html">1</option></li>
<li><option value="2.html">2</option></li>
<li><option value="3.html">3</option></li>
<li></li>
<li>用这样的的来组织一个小的nav</li>
<li>图像padding还得自适应。</li>
<li>Em</li>
<li>html{</li>
<li>font-size: 12px;</li>
<li>}</li>
<li>p{</li>
<li>font-size: 3rem;</li>
<li>}这个还得用media查询来区分，这样也太菜可呗。</li>
<li>不能再外面的加一个固定的，在里面的加上百分比。</li>
<li>css3d文字</li>
<li>0px 0px 0px #666,</li>
<li>-1px -1px 0px #666,</li>
<li>-2px -2px 0px #666,</li>
<li>-3px -3px 0px #666,</li>
<li>-4px -4px 0px #666,</li>
<li>-5px -5px 0px #666,</li>
<li>-6px -6px 0px #000,</li>
<li>1px 1px 5px #ccc,</li>
<li>2px 2px 5px #ccc,</li>
<li>3px 3px 5px #ccc,</li>
<li>4px 4px 5px #ccc,</li>
<li>5px 5px 5px #ccc,</li>
<li>6px 6px 5px #ccc,</li>
<li>0px 0px 0px #888,</li>
<li>-1px -1px 0px #777,</li>
<li>-2px -2px 1px #666,</li>
<li>-3px -2px 1px #555,</li>
<li>-4px -4px 2px #444,</li>
<li>-5px -5px 3px #333,</li>
<li>-6px -6px 4px #000;就是在最后加个分号。。。</li>
<li><meta name="viewport" content="initial-scale=1 maximum-scale=1 minmum-scale=2"></li>
<li>响应设计始终就是内容优先（相对于那些侧边栏，导航栏）</li>
<li>所有伟大的设计或思想，都会卷土重来。</li>
<li>响应设计需要百分比布局</li>
<li>百分比布局创建的弹性界面，同时使用媒体查询限制元素的变动范围。主要是相对于左右百分比。</li>
<li>响应式设计网站欣赏借鉴？最好就是看写的东西。</li>
<li>目标元素宽度%上下文宽度=百分比宽度  每个元素加完这个，还在内部加margin-left/right 这个还得计算</li>
<li>1：1.61803398874989 黄金比例，网页设计也最好不要四舍五入</li>
<li>界面元素的排列也可以用mar-l//r百分比。但是要注意相对父级元素。</li>
<li>用em代替px，body设置文字大小为100%.其他用相对单位em,改用body,其他也会相应得度。</li>
<li>目标元素尺寸%上下文尺寸元素尺寸=百分比尺寸</li>
<li>h1span</li>
<li>span的文字大小是相对于父级元素文字大小，而他的行高是相对于自己的文字大小的。所有单位是em</li>
<li>图片适应</li>
<li>现代浏览器十分简单：img video embed{max-width:100%};</li>
<li>为特定图片制定特定规则。额外添加特定的规则。额外添加一个新的class，{max-weidth:45%}</li>
<li>为了防止图片变形：让他绝对不能超过max-width:属性</li>
<li>为了页面无限扩张：给最外侧的div加{max-width:1414px;}</li>
<li>刷新页面：live,.js</li>
<li>设置只适应图片</li>
<li>字体设置一定要加font-size</li>
<li>看css 3d.</li>
<li>css 变形 、过度，动画</li>
<li>表单：modernizr:可以按需加载js.</li>
<li>响应式设计：将三种已有的开发技巧（弹性网格布局，弹性图片，媒体查询）</li>
<li>真正响应设计方法不仅仅只是根据视口大小改变网页布局。相反，我们应该首先针对小屏幕进行设计，然后足部增大对屏幕的设计和内容、</li>
<li>他只是一种根据不同设备内容进行完美布局的一种显示机制。相反，如果需要根据不同设备提供特定内容的功能，那就需要一个真正的手机版网站</li>
<li>www.mediaqueri.es</li>
<li>媒体查询能够检测那些属性。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;box-sizing:border-box;&lt;/li&gt;
&lt;li&gt;background-size:修改背景图片的唯一办法。可以使用多个背景图片，会带来意想不到的效果。&lt;/li&gt;
&lt;li&gt;3个角度来考虑设计方案。&lt;/li&gt;
&lt;li&gt;web design&lt;/li&gt;
&lt;
    
    </summary>
    
      <category term="Code" scheme="https://github.com/skoll1/libateer.github.io/categories/Code/"/>
    
    
      <category term="自适应页面" scheme="https://github.com/skoll1/libateer.github.io/tags/%E8%87%AA%E9%80%82%E5%BA%94%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>战争的逻辑--普鲁士到德国崛起</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/10/best-3-%E6%88%98%E4%BA%89%E7%9A%84%E9%80%BB%E8%BE%91-%E6%99%AE%E9%B2%81%E5%A3%AB%E5%88%B0%E5%BE%B7%E5%9B%BD%E5%B4%9B%E8%B5%B7/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/10/best-3-战争的逻辑-普鲁士到德国崛起/</id>
    <published>2017-03-10T14:32:27.000Z</published>
    <updated>2017-03-10T15:17:52.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>没有什么东西能够够比陆军和海军更加依赖经济前提。一发炮弹是那个时代农民五年的收入<br>2.一旦技术上的进步可以用于军事并且已经用于军事目的，他们便立刻几乎强制的。而且往往是违反指挥官意图而引起作战方式的改变甚至是变革。随着技术武器的出现，将再也不可能出现落后文明对高等文明的征服，也就是说，类似与成吉思汗之类的草莽英雄再也不会回来了。 </li>
<li>对于其他国家来说，是国家拥有一支军队，而对于普鲁士来说，是一支军队拥有一个国家。</li>
<li>民族认同感并不是凭空来的，是在被侵略的时候来的，德国的民族意识觉醒就是在拿破仑的铁蹄下瑟瑟发抖的时候。</li>
<li>在耶拿会站的时候，拿破仑不仅毁灭了一个封建陆军，而且也肃清了封建观念最后的灰烬，但是在这灰烬里确诞生了一个新的民族陆军，终于在莱比西会战中把自己打败了。德意志也将在民族主义下开始统一。</li>
<li>赎罪券：德意志被称为“教皇的奶牛”.</li>
<li>1685年的时候就发现：政治分裂导致的市场狭小，这与资本主义大工业的生产方式是由根本矛盾的。</li>
<li>德国统一是在匹斯麦的领导下的。当代重大问题不是靠演讲和多数会议解决的，而是要通过铁和血才能解决。</li>
<li>嘉斯泰公约只不过是一张遮盖裂缝的糊墙纸。<br>10.普鲁士和奥地利打在一起是普鲁士想要同一德国。但是当时奥地理在联邦里有很大的威信<br>11.他骑在<pre><code>  .-&apos; _..`.
 /  .&apos;_.&apos;.&apos;
| .&apos; (.)`.
;&apos;   ,_   `.
</code></pre>.–.<strong><strong>__</strong></strong>.’    ;  <code>.;-&#39;
|  ./               /
|  |               /</code>..’`-.<em>  <em>__</em></em>, ..’<br>  / | |     | |\ \<br> / /| |     | | \ \<br>/ / | |     | |  \ \<br>/<em>/  |</em>|     |<em>|   \</em>\<br>|<strong>\  |</strong>\    |<strong>\  |</strong>\上看着山脚下数十万的士兵厮杀在一起，在回忆录中他这样写到，当时好像在玩一场扑克牌，把不属于自己的100万塔勒孤注一掷，甚至传言他还携带了一瓶毒药，准备在普军这一场“不得人心的”战争失败之后自杀。</li>
<li>在大败奥地利的时候，他却坚决的与奥地利签订宽大的条约，假如奥地利遭受严重的损失，那可能成为法国或是我们一个敌人的盟友。。要尽可能的防止奥地利造成屈辱的回忆，普鲁士军队进入帝国首都可能会给我们留下美好的回忆，但是对我们的政策并无必要，但是要使奥利利的自尊受损，那么只会给以后的关系增加困难。</li>
<li>他达到政治目的之后便戛然而止，绝不允许所谓的胜利果实妨碍他的政治目的，作为一个成熟的政治家，匹斯麦始终把军事力量当成实现政治目的工具加以运用，更难得可贵的是他对军事力量的克制，使军事力量始终服从与政治需要而不相反。</li>
<li>后勤补给的因素：国内畜力运送，抢劫：温柔的，土匪式的。</li>
<li>中国无法解决四轮车转向的问题，所以很多的时候都是用两个轮子拉。</li>
<li>铁路的作用：第一次世界大战中威廉二世要求德军总参谋改变作战计划这也是不可能的了，所有的军队调动都已经按照运输能力做了最好的调度安排。一旦改变就引起巨大的混乱。</li>
<li>如果有好的机会，我也许会创业，但是如果没有好的机会的话，也许我会成为一个人生最好的掌舵手，帮他认清自己和目标的反向。</li>
<li>火门枪:一分钟一发，100米的射程。而且还是提前的装枪，也就是说一个枪手只有一次的机会。</li>
<li>手枪的出现极大地改变了战争的形态，从此类似于成吉思汗的草莽英雄再也不能出现了，决定战争的不是士兵的勇敢和智慧，而是双方的生产能力，手枪的结构不是复杂，却需要强大的工业作为支撑。</li>
<li>我们的军队一切准备就绪。一直到最后一个士兵的鞋套上的最后一个纽扣。</li>
<li>法兰西第二帝国–法兰西第三共和国</li>
<li>两个爱好一样的人—记录—搜索—聊天—排行榜。</li>
<li>德意志联邦————德意志帝国————此时早已赶走了奥地利（奥地利+匈牙利）。</li>
<li>此前是法国一家独大：一个流传甚广的笑话是这样说的。从此欧洲收了一个女管家，来了一个男主人。</li>
<li>普法战争的演变：从德国对法国的侵略变成法德两国对欧洲霸权的争夺。</li>
<li>从此德国和发过结下了世仇：7.5亿白银。阿尔萨斯和洛林。无法化解的仇，所以尽可能的削弱法国。</li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;没有什么东西能够够比陆军和海军更加依赖经济前提。一发炮弹是那个时代农民五年的收入&lt;br&gt;2.一旦技术上的进步可以用于军事并且已经用于军事目的，他们便立刻几乎强制的。而且往往是违反指挥官意图而引起作战方式的改变甚至是变革。随着技术武器的出现，将再也不可能出现落后文
    
    </summary>
    
    
      <category term="战争的逻辑--普鲁士到德国崛起" scheme="https://github.com/skoll1/libateer.github.io/tags/%E6%88%98%E4%BA%89%E7%9A%84%E9%80%BB%E8%BE%91-%E6%99%AE%E9%B2%81%E5%A3%AB%E5%88%B0%E5%BE%B7%E5%9B%BD%E5%B4%9B%E8%B5%B7/"/>
    
  </entry>
  
  <entry>
    <title>js代码书写规范</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-JS%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-JS代码规范/</id>
    <published>2017-03-09T15:19:23.000Z</published>
    <updated>2017-03-09T15:21:03.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
      <category term="Code" scheme="https://github.com/skoll1/libateer.github.io/categories/Code/"/>
    
    
      <category term="代码规范-风格书写" scheme="https://github.com/skoll1/libateer.github.io/tags/%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83-%E9%A3%8E%E6%A0%BC%E4%B9%A6%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>js新特性(主要是5版本)</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-新特性/</id>
    <published>2017-03-09T15:06:25.000Z</published>
    <updated>2017-03-09T15:19:08.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>保留字可以做为属性键了，在对象中，点操作符后面可以使用保留字作为非引用属性键。</li>
<li>对象字面量和数组字面量中最后的逗号是合法的。。忠于。</li>
<li>多行字符串：如果在行尾使用反斜杠转移字符，字符串变量可以跨多行。</li>
<li>我被他那一章给骗了，东西全有之前。。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;保留字可以做为属性键了，在对象中，点操作符后面可以使用保留字作为非引用属性键。&lt;/li&gt;
&lt;li&gt;对象字面量和数组字面量中最后的逗号是合法的。。忠于。&lt;/li&gt;
&lt;li&gt;多行字符串：如果在行尾使用反斜杠转移字符，字符串变量可以跨多行。&lt;/li&gt;
&lt;li&gt;我被他那
    
    </summary>
    
      <category term="Code" scheme="https://github.com/skoll1/libateer.github.io/categories/Code/"/>
    
    
  </entry>
  
  <entry>
    <title>JS和unicode</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-unicode/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-unicode/</id>
    <published>2017-03-09T13:53:34.000Z</published>
    <updated>2017-03-09T14:57:57.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>字符和字形：字符相当于拼音，字形就是汉字。字形是语言的基本单位。</li>
<li>雕文：雕文表示字形的具体显示方式。有时，一个字形也可能会有不同的显示方法。这都取决与他的上下文以及其他的一些因素。<br>3.码位：unicode通过一种叫码位的数字来表示字符。马尾的十六进制范围从0X0到0X10ffff.</li>
<li>码元：</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;字符和字形：字符相当于拼音，字形就是汉字。字形是语言的基本单位。&lt;/li&gt;
&lt;li&gt;雕文：雕文表示字形的具体显示方式。有时，一个字形也可能会有不同的显示方法。这都取决与他的上下文以及其他的一些因素。&lt;br&gt;3.码位：unicode通过一种叫码位的数字来表示字符。
    
    </summary>
    
    
      <category term="js和unicode" scheme="https://github.com/skoll1/libateer.github.io/tags/js%E5%92%8Cunicode/"/>
    
  </entry>
  
  <entry>
    <title>移动设计-互动精髓</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-3-%E7%A7%BB%E5%8A%A8%E8%AE%BE%E8%AE%A1/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-3-移动设计/</id>
    <published>2017-03-09T13:22:10.000Z</published>
    <updated>2017-03-09T13:23:03.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>设计师不应该仅仅是专注于项目的创新而不理会新技术的发展，移动社交的精髓是应用会在恰当的时候想用户呈现信息，用户能对其快速感知，并只需作出非常简单的反馈。用户的要求是有活力的，他会要求自己的应用和自己的操作系统融合在一起。</li>
<li>交互设计的主要驱动力在交互工具的发展</li>
<li>你因该设计界面有一定的容错性，避免用户陷入困境，因为计算机执行的代码是准确无误的，但是人无视完美的，所以要注意一下几点：预防数据的丢失，提高操作结果的预见性，允许用户犯错后重试。反复确认按钮，</li>
<li>一句话：用户永远都是对的。</li>
<li>合理的设计程序，及时在不同的界面，操作系统和设备尺寸上面有所不同，用户的体验也是一致的，高效的。交互设计师需要清楚的知道界面和软件之间的差距，从本质上讲，客户花费了酬劳就是要你根据自己的专业知识进行合理的设计决策，从而提供愉悦的，直观的使用体验。</li>
<li>在移动网站阶段，要常访问此类门户网站。</li>
<li>最好先弄秦楚谁是你的而主要客户。针对你的开发项目。你的目标用户可能是特定年龄，性别，有特定爱好的人群。从而从用户的视角去考虑，能够理解问题并找出潜在的痛点。</li>
<li>界面要简单易懂，易于学习，交互方式要明确，直观。</li>
<li>移动应用和传统应用之间不是替代关系，而是互补关系。</li>
<li>尽管你希望自己的应用能解决你想像到的所有问题，但是任何成功的程序都是解决用户的一个问题，并把这个做到最好。</li>
<li>年龄，他们所用的设备。</li>
<li>手机独有的交互设计：移动定位。用户不需要花费时间输入地址和邮件，他可以和容易的找到附近自己需要的东西。</li>
<li>大众化的分格更容易被人接受，让你的设计摆脱地域的限制。</li>
<li>如果你没法提供更多的语言来，那么最好提供更多的图，一图胜千言，好的图有很大意义上的通用性。</li>
<li>简约设计在任何时间，任何东西都是适用的。</li>
<li>谷歌的使命字面意思是整合全球信息，使人人尽享并受益。这一指导思想推进了计算机科学史的重大进步，如果你的应用有个目标或使命。并且比谷歌的文字多，那么你有必要坐下来在换一个更加简洁的目标。</li>
<li>下载量最大的日历，计算机或记事本应用，这类应用时最常见的，可以看他们的应用操作是如何设计的，他们是竞争最激烈的。</li>
<li>如果只是一小撮人在用某个功能的话，那么最好把它藏起来。一旦你的应用发布的话，那么就意味着你哦很难去掉某个功能，那些使用高级功能的人也是最爱惹事的人。</li>
<li>跟随业界领袖的脚步、</li>
<li>a/b测试，设计两种不同的网页设计，看用户喜欢那个就用哪个？</li>
<li>了解用户把时间花在了哪，因为客户永远不知道他们自己喜欢或不喜欢某项引用的原因。数据分析会让你知道这些东西。</li>
<li>维护工作日志，做一个个人的资料库，记录自己的工作遇到的情况。</li>
<li>评估自己的工作。</li>
<li>亚马逊网站</li>
<li>cnn news</li>
<li>flipboard</li>
<li>wolfram|alpha</li>
<li>移动设备任何时候都是要考虑文字输入是个大问题。</li>
<li>手势于鼠标的区别。</li>
<li>在小屏幕中去除不必要的杂乱元素，在大屏幕上突出其控件和增强式导航。</li>
<li>要时刻质疑开发中能否简化界面，设计师非常容易陷入添加功能的的误区。</li>
<li>可以先体验一些没有被优化过的网页，在看现在这些区别。</li>
<li>优雅降级。</li>
<li>减少界面冲突。</li>
<li>在现实世界中，你只有一次机会给别人留下第一印象，在数字世界也是如此。</li>
<li>在这个页面浏览的时候想用到别的程序怎么办？</li>
<li>搭配—比赛—游戏—领券—社交—好的一部分—评论—改进的地方。</li>
<li>你给我一件东西，我会立刻把他的全部额外功能都现出来。扩展，用现在的思想。</li>
<li>用户不是电脑极客；</li>
<li>80、20 80的客户只会用到20的功能，但是为什么游戏的时候我们会用到其他的所有地方呢？</li>
<li>按钮：$(function(){</li>
<li>$(‘input[type=”submit”]’).click(function(){</li>
<li>$(this).animate({</li>
<li>opacity:0.1</li>
<li>},8).animate({</li>
<li>opacity:0.9</li>
<li>},226).animate({</li>
<li>opacity:0.5</li>
<li>},86);</li>
<li>$(‘input[type=”submit”]’).removeClass(‘partial-fade’).animate({</li>
<li>opacity:1</li>
<li>},86);</li>
<li>// 这什么垃圾特效。。。</li>
<li>})</li>
<li>});</li>
<li>input[type=’submit’]{</li>
<li>color:white;</li>
<li>padding: 5px;</li>
<li>width: 68px;</li>
<li>height: 28px;</li>
<li>border-radius: 5px;</li>
<li>border: 1px;</li>
<li>font-weight: bold;</li>
<li>border:1px groove #7a7a7a;</li>
<li>background: linear-gradient(to bottom,#0f97ff 0%,#97d2ff 8%,#0076d1 63%,#005494 100%);</li>
<li>}</li>
<li>input[type=”submit”]:hover{</li>
<li>border:2px groove #7a7a7a;</li>
<li>}</li>
<li>input[type=’submit’].partial-fade{</li>
<li>border-top:1px solid #cff;</li>
<li>border-right:1px solid #ccf;</li>
<li>border-left:1px solid #ccf;</li>
<li>border-bottom: 1px solid #6cF;</li>
<li>box-shadow: 0 0 8px 0px #0f97ff ,inset 0 0 20px rgba(37,141,220,1);</li>
<li>Mask-image：实现字体遮罩。</li>
<li>响应式布局的实现：</li>
<li>Float:max-width:350px float:left;当装不下的时候自动去下一行。</li>
<li>基于相对内编剧的布局控制：comment:padding:0 0 0 10%.给想要排列的所有顺序盒子加上这个东西 </li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;设计师不应该仅仅是专注于项目的创新而不理会新技术的发展，移动社交的精髓是应用会在恰当的时候想用户呈现信息，用户能对其快速感知，并只需作出非常简单的反馈。用户的要求是有活力的，他会要求自己的应用和自己的操作系统融合在一起。&lt;/li&gt;
&lt;li&gt;交互设计的主要驱动力在
    
    </summary>
    
    
      <category term="移动设计-互动精髓" scheme="https://github.com/skoll1/libateer.github.io/tags/%E7%A7%BB%E5%8A%A8%E8%AE%BE%E8%AE%A1-%E4%BA%92%E5%8A%A8%E7%B2%BE%E9%AB%93/"/>
    
  </entry>
  
  <entry>
    <title>weui</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-weui/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-weui/</id>
    <published>2017-03-09T13:19:26.000Z</published>
    <updated>2017-03-09T13:20:03.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>首先最上面有一个错误提示的东西开始都是藏起来的，藏得最深的。</li>
<li>他的样式注意啊：position:fixed;top:0;left:0;right:0;自动撑满页面。连宽高都没有就可以填出来颜色为什么？还用padding调整大小。</li>
<li>然后他最大的所有的容器也是用了position:absolute;top:0,left:0;right:0;bottom:0;这个是可以撑满整个页面的么？那这个absolute的用处是什么？</li>
<li>还有就是所有如果想要自己重新调整他的顺序的话，就要调整display。</li>
<li>Overflow：hidden;</li>
<li>在body里面添加公共样式，如字体，颜色。</li>
<li>正式看到了用opacity来实现出现和消失的效果。原来是自己做过这个。</li>
<li>用padding来调整里面的位置。甚至是变相改变盒子的大小。</li>
<li>好像什么里面都可以加img标签。p ,a ,h1,</li>
<li>他这个里面的字体好像没变化，都是加上px。还是不知道是不一开做了兼容。</li>
<li>只要是大量重复的东西都是用列表做成的。偏偏li里面还什么都能包。</li>
<li>这个里面变化都要加css的transition.现在还没发现是哪块需要这个过渡。。</li>
<li>.flex{</li>
<li>height: 100px;</li>
<li>border:1px solid red;</li>
<li></li>
<li>/<em> display: -webkit-box; </em>/</li>
<li>/<em> display: -webkit-flex; </em>/</li>
<li></li>
<li>/<em> display: -moz-box; </em>/</li>
<li>/<em> display: -moz-flex; </em>/</li>
<li></li>
<li>/<em> display: -ms-flexbox; </em>/</li>
<li></li>
<li>display: flex;</li>
<li></li>
<li>/<em> 水平居中</em>/</li>
<li>/<em> -webkit-box-align: center; </em>/</li>
<li>/<em> -moz-box-align: center; </em>/</li>
<li>-ms-flex-align:center;/<em> IE 10 </em>/</li>
<li></li>
<li>/<em> -webkit-justify-content: center; </em>/</li>
<li>/<em> -moz-justify-content: center; </em>/</li>
<li>/<em> justify-content: center; </em>/</li>
<li>/<em> IE 11+,Firefox 22+,Chrome 29+,Opera 12.1</em>/</li>
<li></li>
<li>/<em> 垂直居中 </em>/</li>
<li>-webkit-box-pack: center;</li>
<li>-moz-box-pack: center;</li>
<li>-ms-flex-pack:center;/<em> IE 10 </em>/</li>
<li></li>
<li>-webkit-align-items: center;</li>
<li>-moz-align-items: center;</li>
<li>align-items: center;</li>
<li>}</li>
<li>.flex&gt;div{</li>
<li>background-color:red;</li>
<li>padding:5px 10px;</li>
<li>}</li>
<li></li>
<li></li>
<li><body></body></li>
<li><div class="flex"></div></li>
<li><div>test</div></li>
<li><div>haha</div></li>
<li>水平这个简单，垂直居中怎么搞？下面明天。这个就是做遮罩的时候容易找到中间的东西，还必须是个正方形的时候才行。</li>
<li>结构：li&gt;div|div(div&gt;a|a|a|a|a &gt;(div&gt;p,div,div)下面的div是隐藏起来的一开始)</li>
<li>.jian{</li>
<li>display: inline-block;</li>
<li>height: 6px;</li>
<li>width: 6px;</li>
<li>border-width: 2px 2px 0 0;</li>
<li>border-color:red;</li>
<li>border-style: solid;</li>
<li>position: relative;</li>
<li>-webkit-transform:matrix(0.71,0.71,-0.71,-0.71,0,0);</li>
<li>transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);</li>
<li>left: 305px;</li>
<li>}一个箭头的css.</li>
<li>P，span包裹文字有什么区别么？</li>
<li>weui层级规范，四层—最下面是内容，然后是fixed元素，然后是遮罩，最后是遮罩上的点击东西。</li>
<li>他一开始的结构是很简单的，后来的样式都是拿js渲染出来的。一开始就两个div,一个是警告的，一个是container</li>
<li>$(function(){</li>
<li>var winH = $(window).height();</li>
<li>console.log(winH);</li>
<li><p>var categorySpace = 10;</p>
</li>
<li><p>$(‘.js_item’).on(‘click’, function(){</p>
</li>
<li>var id = $(this).data(‘id’);</li>
<li>window.pageManager.go(id);</li>
<li>console.log(“1”);</li>
<li>});</li>
<li>$(‘.js_category’).on(‘click’, function(){</li>
<li>var $this = $(this),</li>
<li>$inner = $this.next(‘.js_categoryInner’),</li>
<li>$page = $this.parents(‘.page’),</li>
<li>$parent = $(this).parent(‘li’);</li>
<li>var innerH = $inner.data(‘height’);</li>
<li><p>bear = $page;</p>
</li>
<li><p>if(!innerH){</p>
</li>
<li>$inner.css(‘height’, ‘auto’);</li>
<li>innerH = $inner.height();</li>
<li>$inner.removeAttr(‘style’);</li>
<li>$inner.data(‘height’, innerH);</li>
<li><p>}</p>
</li>
<li><p>if($parent.hasClass(‘js_show’)){</p>
</li>
<li>$parent.removeClass(‘js_show’);</li>
<li>}else{</li>
<li><p>$parent.siblings().removeClass(‘js_show’);</p>
</li>
<li><p>$parent.addClass(‘js_show’);</p>
</li>
<li>if(this.offsetTop + this.offsetHeight + innerH &gt; $page.scrollTop() + winH){</li>
<li><p>var scrollTop = this.offsetTop + this.offsetHeight + innerH - winH + categorySpace;</p>
</li>
<li><p>if(scrollTop &gt; this.offsetTop){</p>
</li>
<li>scrollTop = this.offsetTop - categorySpace;</li>
<li><p>}</p>
</li>
<li><p>$page.scrollTop(scrollTop);</p>
</li>
<li>}</li>
<li>}</li>
<li>});</li>
<li>});第一段js代码。</li>
<li>a标签这个里面很多的都是不直接规定大小的，例如长度和高度，而是利用padding，line-height;来撑开高度。而实现这种类似块的结构的都是加display：block;</li>
<li>为什么他不直接加上边框，非要用这个呢？<br>.weui-btn:after {</li>
<li>content: “ “;</li>
<li>width: 200%;</li>
<li>height: 200%;</li>
<li>position: absolute;</li>
<li>top: 0;</li>
<li>left: 0;</li>
<li>border: 1px solid rgba(0, 0, 0, 0.2);</li>
<li>-webkit-transform: scale(0.5);</li>
<li>transform: scale(0.5);</li>
<li>-webkit-transform-origin: 0 0;<br>11.<br>transform-origin: 22 12;</li>
<li>box-sizing: border-box;</li>
<li>border-radius: 10px;</li>
<li>} </li>
</ol>
<p>*<br>.weui-btn + .weui-btn {</p>
<pre><code>1. margin-top: 15px;
</code></pre><p>}<br>想在一些东西之间除了第一个都来些上下间距。。。就用这个。。。</p>
<ul>
<li>Input</li>
<li>为什么他这块的单位又可以是em.</li>
<li>为什么简单得加个边框，他非要做成这样。。<br>.weui-cells:before {</li>
</ul>
<ol>
<li>content: “ “;</li>
<li>position: absolute;</li>
<li>left: 0;</li>
<li>top: 0;</li>
<li>right: 0;</li>
<li>height: 1px;</li>
<li>border-top: 1px solid #D9D9D9;</li>
<li>color: #D9D9D9;</li>
<li>-webkit-transform-origin: 0 0;</li>
<li>transform-origin: 0 0;</li>
<li>-webkit-transform: scaleY(0.5);</li>
<li>transform: scaleY(0.5);<br>}<br>.weui-cells:after {</li>
<li>content: “ “;</li>
<li>position: absolute;</li>
<li>left: 0;</li>
<li>bottom: 0;</li>
<li>right: 0;</li>
<li>height: 1px;</li>
<li>border-bottom: 1px solid #D9D9D9;</li>
<li>color: #D9D9D9;</li>
<li>-webkit-transform-origin: 0 100%;</li>
<li>transform-origin: 0 100%;</li>
<li>-webkit-transform: scaleY(0.5);</li>
<li>transform: scaleY(26.5);<br>}</li>
</ol>
<p>一个是给上边的加一个，一个是给下边的加一个。。</p>
<ol>
<li>想在下一行用一个很小的地方做个图标之类的东西，那就可以用给他的父元素设置flex，下面整个都是flex=1;</li>
<li>他那个自定义选择的对勾，就是checbox,那个。。。</li>
<li>先看结构吧。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;首先最上面有一个错误提示的东西开始都是藏起来的，藏得最深的。&lt;/li&gt;
&lt;li&gt;他的样式注意啊：position:fixed;top:0;left:0;right:0;自动撑满页面。连宽高都没有就可以填出来颜色为什么？还用padding调整大小。&lt;/li&gt;
&lt;l
    
    </summary>
    
    
      <category term="weui" scheme="https://github.com/skoll1/libateer.github.io/tags/weui/"/>
    
  </entry>
  
  <entry>
    <title>人工智能</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-3-%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-3-人工智能/</id>
    <published>2017-03-09T13:17:38.000Z</published>
    <updated>2017-03-09T13:19:11.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>其中一个好处就是你有机会亲眼见证一个研究领域的发展过程以及那些原始梦想成真的瞬间</li>
<li>儿童并不是人们过去想的那种小大人，他们思考问题的方式和大人的差异非常大，而且在成长过程种每个不同阶段都通过不同的方式进行推理。</li>
<li>为了研究出人类大脑的替代物，我们需要掌握神经突触将两个细胞联系在一起的的具体机制，同时我们也需要掌握大脑中各种结构对活跃在她们周围的丰富的电厂，激素，神经递质，营养素一集大脑中其他化学物质的反应机制。</li>
<li>人类智能最大的特性不是在于工作的时候所进行的活动，而是没有工作的时候大脑所进行的活动。</li>
<li>你能像想象以前人们使用的图书馆里，那些书记不能聊天，在未来的生活中，只是将是活生生的，而不是在被禁止的，他们不是被动的等待你使用它，而是主动与它感兴趣的对象进行联系，并进行合作。</li>
<li>无聊，随机写出一个东西，大家聊和这个东西有关的事情，不大于四个字。</li>
<li>可不可以实现一种自动对话的东西，让那些app制动读取你的信息，在你不方便的时候替你回答。转接</li>
<li>你正在阅读的书可以告诉你可能对那些章节感兴趣，而房间里的书架着会向你展示有关的书籍，与此同时，你在墙上悬挂的注目的相片还会在你注视她的时候告诉你最最近的健康状况</li>
<li>我说想到的和自己能做的差距太大了。发现自己的优势，产品开发思维，－－最快的速度把知识压缩，应用。</li>
<li>可不可以仿照人的方式发展人工智能，就是这个机器先是歌盲人，然后再射向他的功能。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;其中一个好处就是你有机会亲眼见证一个研究领域的发展过程以及那些原始梦想成真的瞬间&lt;/li&gt;
&lt;li&gt;儿童并不是人们过去想的那种小大人，他们思考问题的方式和大人的差异非常大，而且在成长过程种每个不同阶段都通过不同的方式进行推理。&lt;/li&gt;
&lt;li&gt;为了研究出人类大
    
    </summary>
    
    
      <category term="人工智能" scheme="https://github.com/skoll1/libateer.github.io/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Chrome调试</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-chrome%E8%B0%83%E8%AF%95/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-chrome调试/</id>
    <published>2017-03-09T09:10:01.000Z</published>
    <updated>2017-03-09T13:51:20.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>console.log()还可以用Jquery语法。</li>
<li>cmd+o打开当前文件夹。</li>
<li>查找当前元素绑定的js文件。css也可以找到。</li>
<li>在console.log()中输入getEventListeners(a)可以获得当前节点的所有绑定的事件。</li>
<li>在Js文件中选中一段代码后，ctrl+shift+e可以在console.log()面板中运行这段代码。</li>
<li>console.trace()可以追踪代码执行过程中的栈信息。</li>
<li>timeline时间线如果出现红线就说明渲染时间超过了18ms，点击这些红色的线，就可以知道相应的警告信息，不超过16ms的才是流畅的画面。</li>
<li>快捷方法$()返回指定的css的选择器相匹配的的第一个元素。$$()返回与指定的css选择器相匹配的所有元素的数组。</li>
<li>chrome第一个elements右边的那一行最后两个是干嘛的。</li>
<li>cmd+o是寻找整个文件中你想要知道的东西的位置。</li>
<li>cmd+f是当前文件夹内寻找。</li>
<li>如果你希望在所有加载的文件中搜索特定的文字，你可以用下面的快捷键来加载搜索框界面：cmd+ shift+f</li>
<li>Cmd + Shitf + O 定位到特定的函数。</li>
<li>network查看网络请求的全部信息。</li>
<li>lnitiator:parser:请求是html发起的。script：脚本。redirect:页面重定向发起的。other:其他发出的。</li>
<li>Cmd + K 清除控制台</li>
<li>Shitf + Enter 允许你从控制台进入多行模式。</li>
<li>###console.log()API###</li>
<li>console.trace()跟踪一条栈信息。</li>
<li>console.assert(blloean,obj):如果表达式错误，就把obj打印</li>
<li>console.count()记录当前被执行的次数。</li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;console.log()还可以用Jquery语法。&lt;/li&gt;
&lt;li&gt;cmd+o打开当前文件夹。&lt;/li&gt;
&lt;li&gt;查找当前元素绑定的js文件。css也可以找到。&lt;/li&gt;
&lt;li&gt;在console.log()中输入getEventListeners(a)可以
    
    </summary>
    
    
      <category term="Chorme 调试" scheme="https://github.com/skoll1/libateer.github.io/tags/Chorme-%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>标准全局变量</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-全局变量/</id>
    <published>2017-03-09T08:44:01.000Z</published>
    <updated>2017-03-09T08:49:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>1：布尔值，数字和字符串这三种原始值都有对应的构造函数：Boolean,Number,String().他们的实例包含原始值，作为构造函数，他们创建的对象和他们包装的原始值有很大的不同。作为函数，他们会将值转换为相应的原始值，注意，避免包装对象是一种最佳实践，毕竟没有什么事是对象能做而原始值不能的。</p>
<p>2：包装值是对象。注意他比较大小的时候，不能比较大小。</p>
<p>3：当需要对一个原始值增加属性的时候，首先要对原始值包装并且给包装后的对象增加属性，当您使用值得时候就要先对他去包装。</p>
<p>4：去包装是调用valueOf（）。将包装对象转为原始值是用Blloean (new Blloean(true));值得注意的是转换为原始值得时候只能正确提出数字和字符串，而布尔值不能。</p>
<p>5：原始值会从包装器中借调方法，只是在严格模式和宽松模式中发生不同的处理方法。</p>
<p>6：强制类型转换：它是指从一种类型隐式的转换为另外一种类型。强制类型会出现BUG,所以在这一方面的时候要注意，可以先把将变量转换为合适的类型。</p>
<p>7：Boolean()转换。undefined,null,false,NAN,0,’’,除了这些，别的都是true.</p>
<p>8:Number（），好像是类似于一般的字符串解释,undefined-NAN,null-0,false-0,true-1,字符串会被解析，对象会先被转为原始值，然后在转为数字。</p>
<p>9：String（），这个就是所有原始值转换为字符串。</p>
<p>10：Object()这个还是？我去。。。将一个东西转为对象。。。’abc’ instanceof String;  false; Object(‘abc’) instanceof String-true. typeOf Object(‘abc’)-Object;Object(null),object(undefined)–{}.空数组都是。</p>
<ol>
<li>全局变量：所有的全局变量都是全局对象本身或者继承自全局对象（WINDOW）的属性。</li>
<li>全局构造器：Array().Blloean().Date(),Function(),Number(),Object(),RegExp(),String(),</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1：布尔值，数字和字符串这三种原始值都有对应的构造函数：Boolean,Number,String().他们的实例包含原始值，作为构造函数，他们创建的对象和他们包装的原始值有很大的不同。作为函数，他们会将值转换为相应的原始值，注意，避免包装对象是一种最佳实践，毕竟没有什么事
    
    </summary>
    
      <category term="Code" scheme="https://github.com/skoll1/libateer.github.io/categories/Code/"/>
    
    
  </entry>
  
  <entry>
    <title>JSON</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-Json/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/09/best-1-Json/</id>
    <published>2017-03-09T06:25:01.000Z</published>
    <updated>2017-03-09T07:30:43.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>json字符串的使用必须是双引号，字符串变量‘ok’是错的。</li>
<li>属性键也必须使用双引号。</li>
<li><code>JSON.stringify(value,replacer,space)</code>把js对象变成json格式.第一个参数是要处理的值，第二个的值是要在做之后对值处理</li>
<li><p>var student = new Object();<br> student.name = “Lanny”;<br> student.age = “25”;<br> student.location = “China”; </p>
<p> // var json = JSON.stringify(student);<br> 如果没这个函数的话，只是弹出来的时候还是[object,object]但是你找的时候还是很简答的啊。<br> alert(student);</p>
</li>
<li>var students = new Array() ;<br>students[0] = “Lanny”;<br>students[1] = “dong”;<br>students[2] = “I love you”;<br>var json = JSON.stringify(students,switchUpper);<br>function switchUpper(key, value) {<br>return value.toString().toUpperCase();<br>}<br>alert(json); </li>
<li><p>parse用于从一个字符串中解析出json对象,如</p>
<p> var str = ‘{“name”:”huangxiaojian”,”age”:”23”}’</p>
<p> 结果：JSON.parse(str)</p>
</li>
<li>可选参数replacer是用来替换参数Valued的。具体的替换规则是这样的：JSON.stringify({A:5,B:[9,2]},replacer);function replacer(key,value){<br> if(typeof value==’number’){<pre><code>value=2*value;
</code></pre> }<br> return value;<br>}<br>“{“A”:10,”B”:[18,4]}”</li>
<li>当replacer为数组的时候，用来隐藏非数组对象内属性不在这个列表中的所有属性。JSON.stringify({foo:1,bar:{foo:1,bar:2}},[‘bar’]);—<br>“{“bar”:{“bar”:2}}”</li>
<li>最后一个是用来影响输出格式的。如果没有这个参数，那么变换后的结果实单行的文本。有了这个可以可以插入新行而且通过数组和对象的嵌套增加缩进。有这两种方法可以指定如何缩进。</li>
<li>他的参数可以是什么呢？数字。。。将数字会成以相对应的数量的空格来缩进。</li>
<li>一个不被JSON支持的值将解析成为undefined,而不是string.</li>
<li>可以使用一个函数toJSON来先把这个转换为字符串，然后使用该方法来做JSON.stringify().</li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;json字符串的使用必须是双引号，字符串变量‘ok’是错的。&lt;/li&gt;
&lt;li&gt;属性键也必须使用双引号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON.stringify(value,replacer,space)&lt;/code&gt;把js对象变成json格式.第一个参数是
    
    </summary>
    
      <category term="Code" scheme="https://github.com/skoll1/libateer.github.io/categories/Code/"/>
    
    
  </entry>
  
  <entry>
    <title>牛客面试</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-%E9%9D%A2%E8%AF%95-html/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-面试-html/</id>
    <published>2017-03-08T15:52:28.000Z</published>
    <updated>2017-03-09T13:21:22.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>meta标签的组成：meta标签共有两个属性，他们非别是http-equiv属性和name属性，不同的属性有不同的参数，这些不同的参数值实现了网页不同的功能。</li>
<li>name主要用于描述网页，与之对应的属性值为content,content的内容主要是便于搜索引擎机器人查找信息和分类信息。</li>
<li>Robots:告诉机器人那些页面需要索引，哪些不需要。。all:文件将被检索，而且页面上的链接可以被查询,none：文件不被查询，链接也不能被查询,index:文件将被检索,follow:页面上的链接可以被查询,nofollow：文件将被检索，但是页面上的链接不可以被查询.noindex:文件不能被检索，但是链接可以被查询。</li>
<li>Generator:代表说明网站采用什么软件制作。</li>
<li>Copyright:代表网站的版权信息。</li>
<li>Revisit-after:7days:表示网站重访问的天数。</li>
<li>Http-equiv:expires:期限：用于设置网页的到期时间，一旦网页过期，必须到服务器上重新传输。必须使用GMT的时间格式。</li>
<li>Pragma:禁止浏览器从本地计算机的缓存中访问页面内容。：no-cache.</li>
<li>Refresh:”2;URL=<a href="http://baidu.com&quot;自动刷新并且指向新页面。这个的意思是停留两秒自动刷新新的URL网址。" target="_blank" rel="external">http://baidu.com&quot;自动刷新并且指向新页面。这个的意思是停留两秒自动刷新新的URL网址。</a></li>
<li>Set-Cookie:如果网页过期，那么存盘的cookie将被删除。cookie value=<em>*</em>,expires=</li>
<li>Window-target:显示窗口的设定，强制页面在当前页面以独立页面显示：用来防止别人在框架里调用自己的页面。</li>
<li>Content-type:显示字符集的设定：设定页面使用的字符集。</li>
<li>Content-langue:显示语言的设定。</li>
<li>Cache-control:指定请求和响应遵循的缓存机制。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;meta标签的组成：meta标签共有两个属性，他们非别是http-equiv属性和name属性，不同的属性有不同的参数，这些不同的参数值实现了网页不同的功能。&lt;/li&gt;
&lt;li&gt;name主要用于描述网页，与之对应的属性值为content,content的内容主要
    
    </summary>
    
    
      <category term="面试-html" scheme="https://github.com/skoll1/libateer.github.io/tags/%E9%9D%A2%E8%AF%95-html/"/>
    
  </entry>
  
  <entry>
    <title>原始值包装对象</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-%E5%8E%9F%E5%A7%8B%E5%80%BC%E5%8C%85%E8%A3%85%E5%AF%B9%E8%B1%A1/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-原始值包装对象/</id>
    <published>2017-03-08T13:38:14.000Z</published>
    <updated>2017-03-08T13:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>1：布尔值，数字和字符串这三种原始值都有对应的构造函数：Boolean,Number,String().他们的实例包含原始值，作为构造函数，他们创建的对象和他们包装的原始值有很大的不同。作为函数，他们会将值转换为相应的原始值，注意，避免包装对象是一种最佳实践，毕竟没有什么事是对象能做而原始值不能的。</p>
<p>2：包装值是对象。注意他比较大小的时候，不能比较大小。</p>
<p>3：当需要对一个原始值增加属性的时候，首先要对原始值包装并且给包装后的对象增加属性，当您使用值得时候就要先对他去包装。</p>
<p>4：去包装是调用valueOf（）。将包装对象转为原始值是用Blloean (new Blloean(true));值得注意的是转换为原始值得时候只能正确提出数字和字符串，而布尔值不能。</p>
<p>5：原始值会从包装器中借调方法，只是在严格模式和宽松模式中发生不同的处理方法。</p>
<p>6：强制类型转换：它是指从一种类型隐式的转换为另外一种类型。强制类型会出现BUG,所以在这一方面的时候要注意，可以先把将变量转换为合适的类型。</p>
<p>7：Boolean()转换。undefined,null,false,NAN,0,’’,除了这些，别的都是true.</p>
<p>8:Number（），好像是类似于一般的字符串解释,undefined-NAN,null-0,false-0,true-1,字符串会被解析，对象会先被转为原始值，然后在转为数字。</p>
<p>9：String（），这个就是所有原始值转换为字符串。</p>
<p>10：Object()这个还是？我去。。。将一个东西转为对象。。。’abc’ instanceof String;  false; Object(‘abc’) instanceof String-true. typeOf Object(‘abc’)-Object;Object(null),object(undefined)–{}.空数组都是。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1：布尔值，数字和字符串这三种原始值都有对应的构造函数：Boolean,Number,String().他们的实例包含原始值，作为构造函数，他们创建的对象和他们包装的原始值有很大的不同。作为函数，他们会将值转换为相应的原始值，注意，避免包装对象是一种最佳实践，毕竟没有什么事
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>字符串方法</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-字符串方法/</id>
    <published>2017-03-08T13:36:43.000Z</published>
    <updated>2017-03-08T13:37:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>1 . 字符串是由Js字符组成的不可变序列.<br>2 . 在JSon中必须用双引号。其他的不管。<br>3 . 转换为字符串的方法。<strong>String（）</strong><br>4 . 在展示数组对象元素的时候。用这个方法，JSON.stringify()<br>5 . 字符串拼接方法。  “+” 号。想要集中在一个的时候就用+=。<br>6 . 凭借字符串数组。把所有的字符串都加到一个数组里面，然后调用join（）拼接起来  .<br>7 . 字符串的原型方法：charAt(number)。  ‘a’.charCodeAt(). var n=String.fromeCharCode(97);互逆的函数。<br>8 . 提取子字符串的方法 String.substring(s,e);<br>9 .换字符串的方法（好像没有这个方法）：<strong><strong>注意和数组的方法区别</strong></strong> split（） 切割方法。solit(“”,num) 如果第一个参数是空字符串，那么元字符间每个都会被分割成数组返回。<br>10 . 字符串的变换：trim()这些都是他的构造函数。就是原值。<br>11 .concat()为什么后来两种芳法都行了,不管是象征的，还是具体的字符串都行了。<code>var str=&quot;hello&quot;;str.concat(&#39;liba&#39;);var str3=str.concat(&quot;sadf&quot;,1);var str3=str2.concat(str,1);</code><br>12 . 字符串检索：str.indexOf(‘r’,4); 要找的东西，开始的位置。没有找到会返回负值的。<br>13 . 还有一些就是能和正则匹配的字符串用法。等看正则的时候在看吧。<br>14 .</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1 . 字符串是由Js字符组成的不可变序列.&lt;br&gt;2 . 在JSon中必须用双引号。其他的不管。&lt;br&gt;3 . 转换为字符串的方法。&lt;strong&gt;String（）&lt;/strong&gt;&lt;br&gt;4 . 在展示数组对象元素的时候。用这个方法，JSON.stringify()&lt;b
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>正则要死了。。。</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-%E6%AD%A3%E5%88%99/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/08/best-1-正则/</id>
    <published>2017-03-08T13:35:09.000Z</published>
    <updated>2017-03-09T06:20:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>1：先列出一些看不懂的：特殊字符。 \ ^$.<em>+?()[]|所有列出的字符都有特殊含义。如果想使用这些符号在正则表达式里面，那就必须要转义用/.<br>2:数字 \d ==[0-9]..\D==[^0-9].匹配任意的非数字。<br>3：字母数字字符：\w匹配任何的拉丁数字和下划线[a-zA-Z0-9]\w:和前面匹配的相反。<br>4：\s匹配空白字符（空格，制表符，换行符，回车符，翻页符合所有的Unicode）\S匹配所有的非空白字符。<br>5：$匹配输入字符串结束的位置。<br>6：^匹配输入字符串开始的位置。<br>7：</em>匹配前面的东西出现零次或多次。=={0，}<br>8：+匹配前面出现最少一次。=={1,}<br>9:?匹配前面出现了一次或零次=={0，1}<br>10：{n}n是正整数，匹配确定的n次。<br>11：{n,m}最少匹配n次，最多m次<br>12：{n,}匹配最少n次。<br>13：?当该字符紧跟在其他任何一个限制字符的后面，匹配的是非贪婪的，他会尽可能少的匹配搜索到的字符串。而默认的贪婪模式则会尽可能多的匹配所搜索到的字符。<br>14：. 匹配除\n以外的任何单字符。要匹配出包括包括\n在内的字符，请使用[.\n]的形式。<br>15：x|y匹配x或y。z|food   (z|f)ood.<br>16：[xyz]字符合集，匹配所包含的任何一个字符。<br>17：[^xyz];<br>18: \b匹配一个单词边界。也就是指单词和空格键的位置。er\b 匹配never 不匹配verb.<br>19: \B匹配非单词边界。<br>20：如果想要动态的拼装正则表达式，那就要使用构造函数。<br>21：正则表达式函数的实例属性如下：<br>   1：标识：g/全局 i/忽略大小写 m/多行匹配 。<br>   2: .test()方法：查找是否匹配。参数是要匹配的字符串。<br>   3：.search()：发挥发现匹配的位置索引。他的参数是正则表达式<br>   4：.exec()捕获分组。首先要看的是他的形式。var reg=/aa/;reg.exec(str);<br>      这个函数通过提供的字符串进行一次匹配检测，获取字符串的第一个与正则表达式的内容，并将匹配的内容与子匹配的结果返回存放在数组中。<br>        .match()捕获分组或返回所有匹配的子字符串。 var reg=/an/ str.match(reg);<br>5：先说一个概念：正则的子组表达式。子组通过圆括号分割界定，并且可以嵌套。主要有两个作用：将可选分支局部化。将子组设为捕获子组。当整个模式匹配后。目标字符串中的部分将会通过exex()的ovector参数回传给调用者。如果字符串 ”the red king” 使用模式((red|white) (king|queen)) 进行匹配， 模式匹配到的结果是 array(“red king”， ”red king”, “red”, “king”) 的形式， 其中第 0 个元素是整个模式匹配的结果，后面的三个元素依次为三个子组匹配的结果。 它们的下表分别为 1， 2， 3。如果字符串 ”the white queen” 匹配模式 ((?:red|white) (king|queen))，匹配到的结果会是 array(“white queen”、“white queen”、“white queen”)，的和 king|queen 这两个子组。<br>6：对比：1、当正则表达式无子表达式，并且定义为非全局匹配时，exec和match执行的结果是一样，均返回第一个匹配的字符串内容<br>              2.当正则表达式无子表达式，并且定义为全局匹配时，exec和match执行，做存在多处匹配内容，则match返回的是多个元素数组<br>3.还有其他的不了解了。<br>7：.replace（search,repace）找到seearch，(正则表达式；注意用g符号不然只会匹配一次正则表达式)替换为replace.1：当他为字符串的时候，会替换为字符串，唯一例外的就是字符美元符号。他会启动所谓的替换指令。2：当这个参数为函数的时候，他会对匹配到的字符串进行处理，该函数具有以下签名。<br>8：关于g的一些注意事项：当表达式设置了g，那么有些方法必须多次调用才能返回所有结果，这时可能会有问题。test()，exec().方法。<br>9：空的正则可以匹配一切。/.^/则是什么都不匹配。<br>10：.匹配除了行结束符以外的一切字符。使用[\s\S]可以匹配一切字符。<br>一些常见的正则表达式：<br>  1：匹配汉字：[\u4e00-\u9fa5]<br>  2：[\w!#$%&amp;’<em>+/=?^_`{|}~-]+(?:.[\w!#$%&amp;’</em>+/=?^<em>`{|}~-]+)<em>@(?:[\w](?:[\w-]</em>[\w])?.)+<a href="?:[\w-]*[\w]">\w</a>? email \w[-\w.+]<em>@([A-Za-z0-9][-A-Za-z0-9]+.)+[A-Za-z]{2,14}email<br>  /^[a-z]([a-z0-9]</em>[-</em>]?[a-z0-9]+)<em>@([a-z0-9]</em>[-_]?[a-z0-9]+)+[.][a-z]{2,3}([.][a-z]{2})?$/I email “^\w+([-+.]\w+)<em>@\w+([-.]\w+)</em>.\w+([-.]\w+)<em>$<br>3：用户名：^[a-zA-Z]\w{5,15}$<br>4：电话：”^(\d{3,4}-)\d{7,8}$<br>5：手机：^1[3|4|5|7|8][0-9]\d{8}$<br>6:身份证：\d{14}[[0-9],0-9xX]<br>7:^[0-9]</em>$只能数字</p>
<ol>
<li>replace() .search()敏感词过滤，小说采集器。</li>
<li>1:构造函数方法：Dtae().now()以毫秒返回当前时间。==new Date().getTime();<br>2:Date().parse()将里面的日期转换位毫秒。<br>3：日期返回有这么多的道道：返回字符串。<br>4：data().toTimeSting();toLocalTimeString(),h.toLocaleDateString();2017/3/9<br>5:h.toJSON():将日期返回json字符串。”2017-03-09T04:06:10.173Z<br>6:h.toISOString();：创建一个最完整的时间。”2017-03-09T04:06:10.173Z<br>7：h.vauleOf()：日期对象可以转换为数字，这样在两个时间之间比出大小。<br>8：new Date(0):返回最一开始的时间。<br>9：设置未来的时间。1. var future=new Date();<pre><code>future.setDate(future.getDate()+10);
</code></pre>10:Math为众多的数学函数提供了命名空间。<br>11：Math.E.还有那些对数有什么用啊。。<br>12：Math.abs()绝对值。Mtah.ciel()上最大。Math.floor()下最大。Math.round()四舍五入。<br>13：Math.pow(x,y);x的y次幂。Math.sqrt()返回根号。<br>14:Math.round() 0-1的随机数。<br>15：返回特定范围的整数的函数。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1：先列出一些看不懂的：特殊字符。 \ ^$.&lt;em&gt;+?()[]|所有列出的字符都有特殊含义。如果想使用这些符号在正则表达式里面，那就必须要转义用/.&lt;br&gt;2:数字 \d ==[0-9]..\D==[^0-9].匹配任意的非数字。&lt;br&gt;3：字母数字字符：\w匹配任何的
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>农村金融改革</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/08/best-3-%E5%A4%A7%E9%95%BF%E5%B8%83/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/08/best-3-大长布/</id>
    <published>2017-03-08T07:09:31.000Z</published>
    <updated>2017-03-08T07:11:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>中国农村金融发展研究</p>
<p>1 农村金融的重要性</p>
<p>自从1978年改革开放后，我们的国家发生了翻天覆地的变化，其中最显著的经济方面，而且他的速度是超过任何人想象的。如今我们的国家是世界第二大经济体，甚至将来很有可能超过美国，成为全球第一大经济体。当我们成为这么大的经济体量的时候，我们又该向世界传达一些我们中国人改革经济的什么措施呢？总有一些特质是我们中国人传了几千年的甩也甩不掉的那个东西是什么？当然对于目前我们的经济发展趋势来看，分为两派。一派认为中国和印度等其他第三世界国家的崛起将是本世纪的头等大事，他们的发展带来的周边国家的交流和合作带来的火花是不可估量的。而另一派则持悲观态度，认为不论是中国的体制，还是特殊的国情，包括那么多的人口，都将可能成为中国经济崩溃的最后一根稻草。反而正是因为这两种观点，所以对未来中国经济的研究才显得更加迷人。在看观国内经济，虽然资本在城市间流动的相对比较频繁，形成了所谓“北上广“这样的城市群，而且城市的经济占比较大。但是鉴于我国的特殊国情，根据第六次人口普查，我国最少还有一半的人生活在农村，这一半人的生活情况和农村金融息息相关，而另一半城市人口他们每天的衣食住行也和农村金融有很大关系。所以不管是对当前中国经济的研究，用来确定下一步的发展状况，还是对未来的中国经济发展甚至改革来说，农村金融都是一个绕不过的话题。研究农村金融的发展，可以更好地了解当前的经济发展情况，政府利用其中的发展规律，可以更好地服务地方农村，制定出真正实用的政策，就像当前提倡的”精准扶贫”政策一样，只有先了解情况才能做到“精准”，研究农村金融，就是给农村金融看病，我们必须像园丁一样小心翼翼的呵护他成长起来。农村金融只有健康发展，才能真正改变农村经济，实现农业现代化，实现农村生活现代化。只有解决了我国农民的现代化问题，我们的国家才真正的称得上现代化的国家。</p>
<p>2：农村金融的发展历程<br>提到农村金融发展的历史，我把这个过程大体分为建国之前和建国后。<br>古代我国经济体量小，博弈环境比较简单，所以我们把古代经济也都看作是农村金融现象进行分析，因为只有从根上了解古代的经济发展规律，才能看清楚今天我们中国人的经济特质是什么，才能解决我国当前农村金融的面对的本质问题。春秋战国时期的管仲的变法可以说的上是中国历史上第一次的经济体制改革，通过有计划的发展经济，国家控制两个重要的生产资料，“官盐铁”，然后把产业向中下游转移，向民间开放资本从而使齐国第一个登上了历史的舞台，之后是商鞅，他执行的是命令性计划经济，也使秦国走向了历史的舞台。等到汉代中国真正统一以后，中央集权下一共发生了四次比较大的变革，当然每一次改革带来的结果都不尽相同，汉武时期的繁荣，王莽带来的战乱，安史之乱时期的刘晏，宋代王安石的变法的最后挣扎。直到明清时期500年的沉寂，我国农村金融都处于长期停滞的状态，直到1840年的鸦片战争。到了近现代时期，也发生了四次大的变法运动，李鸿章的洋务运动，失败了，民国时期的统制经济。到新中国成立后还有两次，这个主要讲。1978-1993年，中央和有产者变小，地方政府和无产者变大，这一时期，国有企业，外资和乡镇企业是经济发展的主要动力。1991-2003年长达12年的时间里朱镕基改革了经济状况，在经济规模扩大的前提上，对产业结构进行调整。对经济蛋糕重新调整分配，中央权力大规模回归。时间直到现在，我国农村金融的发展历程就是在这样大的框架来讨论和研究的。从一开始的分田包产到户到现在60余年的并存改革，从一无所有到现在以各种形式的农村银行等经融机构为主，以国家补贴，农业保险等金融机构为辅。形成了涵盖农民生活各个层次，各个情况下的金融活动体系。保证了农村经济的活力和繁荣。在计划经济为主的那个年代，由于其特殊的经济活动要求，在这一阶段农村金融走过一段艰辛的成长时期。甚至在改革开放之前根本不存在农村金融体系，那个时候的农村银行只是国家资源配置工具的一部分。由于他的建立目的十分不清晰，所以他所能发挥的作用就极其有限。这个时期的农村银行根本没有成为服务“三农的工具”。在随着改革大潮的起伏中，我们最终选择了社会主义市场经济，而农村金融这艘小船也是随着大浪起伏，服务于不同时期国家经济建设全局的需求。具体体现为在87年之前，在改革初期，首先改的是农村经济，提出了农村信用社的合作金融的性质。在87年之后，改革的重点从农村转向城市，新的计划导致农村经济的压力不断增大，在经历亚洲金融的冲击下，为了确保国家的经济安全，这些经融机构都从农村撤出，都只剩下一个空壳子。所有的这些措施对我我国推进现代化的脚步发挥了极大的作用，但是是真正对于农村金融来说本质上是无关痛痒的。现在很明显现在到了工业反哺农业的时代，农村金融改革的下一步应该是正真回归农村本身，他应该真正体现农村金融的需求。<br>    在改革开放前，农村信用社构成了主要的农村金融机构。这一时期，农村主要发展的就是信用合作社。在马克思主义的领导下，这种合作金融是农民自主的资金入股，不以盈利为目的，主要是解决农民的资金需求为第一前提。但是在人民公社化运动的冲击下，政府推行了信用社升级运动，原来的自发集资变成了集体所有，最后升级成立了国家所有，成为国家的金融组织，成为人民银行的一部分。现在这个银行已经偏离了他原先的成立目的，彻底成为了社会主义的砖瓦。在改革开放后，又开始对这一制度的恢复，希望将原来的初衷实现，就是将本乡闲散的资金集中起来，解决村民的经济困难，但是由于缺乏管理，因为害怕出现金融风险而被取缔。这个时代的金融建设是从国家层面上出发的，自上而下的强制变迁，在没有农民参与的情况下，他们被动的接受了这次浪潮的冲击，从历史上来看，农村任何一项制度的创新，都必须和农民紧紧的联系在一起，农民参与度也许是农村金融改革的下一个需要注意的地方。总的分析来看，我国农村金融的改革本质是在市场经济逐渐确立的过程中，以农村金融机构改革为主要内容的改革。这种方式虽然可以很快的建立起农村的金融体系，但是在市场经济的条件下，没有建立起与之相对应的扶持政策，资本没有流向农村，农村 金融改革没有钱来，那改革就是一纸空文。全是政绩工程，真正落实到农民身上的好处屈指可数。而农村银行改革变成了商业化改革，官办性质越来越浓重。直到现在，农业发展银行仍然是我国唯一的农业政策性质的银行。</p>
<p>3：面对的问题：<br>谈到农村金融面对的问题，我觉得是和他的发展息息相关的。正是因为面对各种各样的复杂的环境，所以他才会生出不同的问题。下面我主要谈一下这几个问题。1：由于以前的特殊国策，导致农村金融建设始终是服务以国家经济建设的。从一开始的人民公社化，到大跃进。在农村金融改革制度的设计的时候从来没有思考过农村正真面对的经济问题。2：由于第一个问题，引出了第二个问题，农村金融制度的建设不是遵循自然规律发生的经济活动，反而是一场自上而下的建设运动，很少有发生一些响应底层呼声的改革。农民根本就没有参与这个活动，特别是我国国土面积那么广大，古人云“十里不同风，百里不通俗”，各个地区的经济，文化差异那么大，无论制定什么政策都应该在充分了解当地的情况之下在做决定，同时还要发现各地的金融创新。而以前很大一部分都是一些不参与这个经济活动的人来制定一些他人要执行的金融措施。很容易出现想当然的状况。3：还是由于第一个问题：在建立金融机构时候，没有不断完善相应的政策体系。在建设农村金融机构的时候，政府没有指定相应的金融政策，发生了事情的时候都是一团乱麻。4：改革面对的新问题：农村的产权问题将成为改革的新瓶颈。现代社会人们对产权的重视也将会转移到农村问题上，包括农村土地问题，房屋，各种不动产。对于农民来说这是他根生立命的基本，而对于现代金融来说，他是不可缺少的实现现代化的资源。现代金融是建立在信用制度上面的，而产权是信用制度的核心，如何处理农村各种产权的关系将是下一步改革的关键钥匙。目前土地产权的归属问题不清晰，土地使用关系不稳定，很大一部分挫伤了农民对土地的感情。其次是土地实行的平均分配导致的小农经济，土地资源分散不集中，不利于农业的现代化发展，农民所有地的产权模糊。导致农民持有的资产没有办法进行抵押投资，得不到确认，土地资源如果不来播种就没法换成别的生产资料，农民想要摆脱土地的话，没办法将这个资源变现，换成新的其他经济资源来进行其他的生产投资。5：还有就是城乡差距不断扩大，必然导致农村和城市生活的差距也不断拉大，长期这样不但农村金融没办法正常发展，也会为社会埋下不稳定的因素。6：农村金融监管不到位，检查力度不到位，往往走的是形式主义，“面子工程”，还有就是金融设备不是很到位，就比如银行或者是ATM，往往只是普及到大一些的县城就没有了，而对于再往下的农村，根本没有相关的金融机构，不仅硬件有问题，软条件也有问题，农村金融体系也不完善，没有相关的法律法规来约束他的发展，一旦发生差错，往往没有解决的方法，都是干瞪眼。经过这么多年的发展，农村金融这么多年的改革，目前我国的农村金融体系仍然是总体上服务于城市发展，工业发展这一战略的。而当前我国面临的新的经济形势来看，金融部门必须实现财富的公平分配，必须实现城乡均衡的发展战略，构建服务于城乡统筹发展的新的农村尽让发展体系。和城市相比，农村的金融收到的管制较小，但是却没有体现出很强的竞争力，我国农村金融还有很大的需求，但是现在的很难满足需求，按照一般来说越是贫困的地方，越是需要这个东西，但是我们却恰恰相反，越是不发达的地方越是没有这个金融机构的出现。下面我将主要介绍对于农村金融改革进一步的改革的政策建议。</p>
<p>农村金融改革政策建议：针对以上农村金融在发展上遇到的问题，我将对这几方面提出自己的警容改革政策建议。<br>    按照“十三五”一号文件的发布，农村金融的发展要以形成城乡经济一体化发展的格局为要求，加强农业的基础建设，努力建设社会主义新农村。以建设社会主义新农村为一个中心为农村金融改革下一步的重点。<br>    具体政策和措施如下：<br>    1：狭义的农村改革指的是农村信用社改革。农村信用社改革包括两个方面，一个是具体的金融设施要进一步普及和完善，比如设立新的信用社，在偏远地区和欠发达的地区，由于具体条件的限制，要多设立服务处和指导人员来辅导农民来进行经济活动，而在一些相对发达的地区，就要多设立相关的ATM机器，来更加方便的服务农村金融活动。另一方面是对信用社的相关制度制度进行改革。建国以来我国农村信用社经历了人民公社，生产大队，农业银行的多次改革。在农业银行恢复后，农村信用社成为了他的下设机构。虽然也就进行过一些改革，但是农村信用社的经营还是自上而下的命令式出发，1996年之后，国务院出台了新的政策，农村信用社正式与中国农业银行脱离了，成为了中国人民银行的下设机构。目前信用社改革的重点在于产权和管理全方面的升级。信用社应该回到最初的商业化的进行，让市场来自己调节他的行为，其次，把管理权应该交给当地的政府，这样可以做到因地制宜，面对当地的特殊国情，特殊环境来及时的调整政策和条例，这样便于出现农村金融改革的新创新甚至是突破，改革就是应该大步的迈开手脚，错了可以改么。比如在产权方面，在比较发达的地区就可以实行股份制银行，在欠发达的地区可以选着合作银行模式来促进当地农业经济的发展和解决问题。在更不发达的地区，可以继续实行原来的体制，通过市场的竞争，和统筹规划把那些不符合条件的银行网点进行重组。而在人员管理的方面，应该分权设立机构，让他们之间相互制约，责任分明。最后就是对这方面的监管力度了，有的时候其实人们犯错，很大一部分都是环境的失误，只要我们能够很好地控制好环境就，就可以很少的避免金融犯罪，比如建立更好的监管力度，让那些想要犯罪的人闻风丧胆，就监管方面我觉得有以下几点可以写的，首先就是完善相关的法律制度，做到有法可依，有法必依。落实监管机构的职能。然后就是确立多种样的监管方式，实现监管的全覆盖。现在方式较为单一，很容易就可以逃脱，掩埋过去。还有就是提高农村金融监管人员的职业道德素质，让他们了解职业操守，和法律。对于借款人这方面来说来说，银行为了资金安全，也应该像城市一样，建立信用社监管体制，避免出现不良贷款记录，危害其他存款人员的财产安全，现在不仅是贷款难对于农民来说，对于银行来说，农村金融成为一个获取资金的地方，资金大多数都流出了农村，很少回流，资金大量流入城市，没有钱，农村金融就无从谈起。<br>    2：以前农村金融发展都是以国家工业发展为前提来改革的，农村金融发展其实就是农民生活情况的改善，只要农民生活条件变好，那么农村金融问题也就迎刃而解了。所以针对当前农村金融面对的现状，下一步应该到了工业反哺农业的时候了，利用财政税收，货币信贷，金融监管等措施，使金融资源向“三农”倾斜，确保农村金融的健康发展。所以广义的农村金融改革包括以下几个方面。<br>        1：国家的优惠农村金融政策，应该继续完善农村政策性的金融服务，联合中国农业发展银行这一政策性银行，为农村金融改革提供足够的资金储备和血液。国家对农村金融机构，应该留足储备资金，不断支持和改善农户贷款的政策。<br>        2：建立农村金融资金回流制度，在国家层面上引导储蓄资金回流，对邮政储蓄资金的去向进行限制和约束，实现专款专用。<br>        3：利用农业发展银行提供的政调教，各级村干部应该充分了解发展银行这一政策银行的作用，结合自身需求去了解相应的政策，去寻求相应的政策优惠。<br>        4：取消民间金融的限制，由于农村金融的监管力度相比城市来说比较小，应该更加有竞争力才是，所以应该为民间金融创早更好的发展条件，各级政府因该积极支持民间金融的发展，认识到他们面对的苦难，允许农村农民间金融组织的合法化。<br>        5：围绕建设现代化农业这一目的，吸引资本导向农村，加快发展现代化农业发展，通过农业投资，不加可以立马增加农民增收的方式，而且一旦基础的农业设施建设好，农业可以长期快速发展，相当于一次投资，长久回报。<br>        6：围绕促进农民增收，加大惠农力度，光靠国家给银行提供资金来满足农村金融的需求不是长远之计，只有切实增加农民的经济收入，让他们把钱投到这个里面，才可以形成一个良性的发展源泉，才是百年大计。<br>        7：加强新型城镇化的发展，以工业促进农业的发展，以城市带动乡村的发展，提升乡村消费结构的升级。为下一步发展农业，新农村建设留下大量的空间。<br>        8：科技是第一生产力，应该加大科技向农业的大方面转移，实现新一轮的农业科技革命，为农业升级注入新的科技活力。<br>        9：在环境资源进一步限制的情况下，比如土地“18亿亩”的红线，如何加快转变农业<br>的发展方式十一个刻不容缓的难题，所以应该在这一方面多做努力。大力发展新型农业形式，借鉴国外发达国家农业转型的模式，研究他们遇到的问题来改造自己的农业。<br>        10：推进农村一二三产业的融合发展，以促进农民收入增长为目的，通过延长农业产业链，来提升农业附加值。大力发展特色养殖业，农产品的加工业，挖掘生态休闲旅游，文化教育价值，扶持一批具有历史，地域，民族特色的特色尽管旅游村镇，打造形式多样，各式各样的乡村旅游休闲产品，让农民有更多的收入来源，提升他们收入的稳定性。<br>        11：加强对乡镇农村的中小微企业，特别是带有“村特色”的产品发展企业的金融服务力度，整合各类扶贫资源，开辟统一的扶贫资金渠道，让他们流向最应该的地方。<br>        12：完善农业保险制度，建立保险资产的体系，对当前农村现状来说，农业可能是唯一的收入来源，一旦发生自然灾害，可能就会面临颗粒无收的情况，所以应该推进农业保险制度，提高保险的覆盖面，增加保险的瓶中，提高农民的保险意识和深度，改善政策性保护资金的使用率。<br>    13：大力推进农业中介服务体系的建立，从国家层面上不断增强农产品价格保护制度，从而不断减小市场风险。从引导农产品生产，储蓄。来调节市场需求，避免出现较大的波动。<br>    14：开展农村信用体系的建立，相对于城市的信用体系的建立来说，农村在这一方面还有很多的不足的地方，所以应该健全贷款和保险制度，通过建全信用档案，加快农村信用体系的建立，为以后相关的其他政策推行打下一个相好的现代化基础。<br>    15：农村金融也应该实行商业机制，对于那些出现问题的金融机构，应该设立相关的市场推出机制，这样才能更好的促进农村金融的健康持续发展。</p>
<pre><code>在将来很大的一大段时间内，农村问题仍然是我们面临的很大的问题，虽然最近几年中央对农村金融还在不断的时间和探索，但是和当初提出的农村金融改革结果还有很大的差距。在讨论农村金融问题的时候，我们应该紧紧扎根农村问题，倾听农民的意见，认识到他们真正的困难，还要借鉴国外的成功经验，立足农村，放眼世界，才能在农村金融改革的都上越走越远，农民才会真正富裕起来，实现国家的现代化。
</code></pre><p>*参考文献：吴晓波.历代经济改革得失。吴晓波。浙江大学出版社 2013 10-20。<br>电子文献：1：王雪磊.郭兴平.张亮-农村金融研究  2012 <a href="http://f.wanfangdata.com.cn/view/建国以来农村金融的发展历程及其评述.aspx?ID=Periodical_ncjryj201207014&amp;transaction=%7b%22ExtraData%22%3a%5b%5d%2c%22IsCache%22%3afalse%2c%22Transaction%22%3a%7b%22DateTime%22%3a%22%5c%2fDate(1488116164006%2b0800)%5c%2f%22%2c%22Id%22%3a%22a24c3824-9802-4cc4-8fe0-a7260163f9b4%22%2c%22Memo%22%3anull%2c%22ProductDetail%22%3a%22Periodical_ncjryj201207014%22%2c%22SessionId%22%3a%22f96e5b2f-c63b-4bd0-a5b9-9424300b0380%22%2c%22Signature%22%3a%22AWGayFPR7xz60uKb1nRLw8xIIEa%2bFKlvTTLPp1LlICGImtdwit%5c%2fsXuDP1RxX%2bvBc%22%2c%22TransferIn%22%3a%7b%22AccountType%22%3a%22Income%22%2c%22Key%22%3a%22PeriodicalFulltext%22%7d%2c%22TransferOut%22%3a%7b%22AccountType%22%3a%22GTimeLimit%22%2c%22Key%22%3a%22haindx%22%7d%2c%22Turnover%22%3a3.00000%2c%22User%22%3anull%2c%22UserIP%22%3a%22150.255.28.188%22%7d%2c%22TransferOutAccountsStatus%22%3a%5b%5d%7d" target="_blank" rel="external">http://f.wanfangdata.com.cn/view/建国以来农村金融的发展历程及其评述.aspx?ID=Periodical_ncjryj201207014&amp;transaction=%7b%22ExtraData%22%3a%5b%5d%2c%22IsCache%22%3afalse%2c%22Transaction%22%3a%7b%22DateTime%22%3a%22%5c%2fDate(1488116164006%2b0800)%5c%2f%22%2c%22Id%22%3a%22a24c3824-9802-4cc4-8fe0-a7260163f9b4%22%2c%22Memo%22%3anull%2c%22ProductDetail%22%3a%22Periodical_ncjryj201207014%22%2c%22SessionId%22%3a%22f96e5b2f-c63b-4bd0-a5b9-9424300b0380%22%2c%22Signature%22%3a%22AWGayFPR7xz60uKb1nRLw8xIIEa%2bFKlvTTLPp1LlICGImtdwit%5c%2fsXuDP1RxX%2bvBc%22%2c%22TransferIn%22%3a%7b%22AccountType%22%3a%22Income%22%2c%22Key%22%3a%22PeriodicalFulltext%22%7d%2c%22TransferOut%22%3a%7b%22AccountType%22%3a%22GTimeLimit%22%2c%22Key%22%3a%22haindx%22%7d%2c%22Turnover%22%3a3.00000%2c%22User%22%3anull%2c%22UserIP%22%3a%22150.255.28.188%22%7d%2c%22TransferOutAccountsStatus%22%3a%5b%5d%7d</a><br>2：农村金融体制改革 百度词条 <a href="http://baike.baidu.com/link?url=Hc6YHIc8-Mcz_46r0vGJ1P2WzwwVxc6kgOQ9hDwZdy5GqxyZEbuF2I-6TsLZd-2Hofq9mc7i-XoaWccVUyrk3TfVmetrUkOVYzlz_qeZ3rxgh63ibXp-eKfiSVtSDy8RgvX02UWUYj21ZCjDSJKoEopSbOmCRNywEdryyVlzJdl2qaJZu3aBqP_5XdwPSqqf8S8IzI3wNDVCu9r-N5CTtBUkN1sUhIgBYFjwpc_n3mF0K_YeLzwOyZ-geytra2rRxQS8CpOhQLbwPtzrzkzj4shRfTEOcZng0vdCx3JIqCu" target="_blank" rel="external">http://baike.baidu.com/link?url=Hc6YHIc8-Mcz_46r0vGJ1P2WzwwVxc6kgOQ9hDwZdy5GqxyZEbuF2I-6TsLZd-2Hofq9mc7i-XoaWccVUyrk3TfVmetrUkOVYzlz_qeZ3rxgh63ibXp-eKfiSVtSDy8RgvX02UWUYj21ZCjDSJKoEopSbOmCRNywEdryyVlzJdl2qaJZu3aBqP_5XdwPSqqf8S8IzI3wNDVCu9r-N5CTtBUkN1sUhIgBYFjwpc_n3mF0K_YeLzwOyZ-geytra2rRxQS8CpOhQLbwPtzrzkzj4shRfTEOcZng0vdCx3JIqCu</a><br>3：“十三五”中央一号文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;中国农村金融发展研究&lt;/p&gt;
&lt;p&gt;1 农村金融的重要性&lt;/p&gt;
&lt;p&gt;自从1978年改革开放后，我们的国家发生了翻天覆地的变化，其中最显著的经济方面，而且他的速度是超过任何人想象的。如今我们的国家是世界第二大经济体，甚至将来很有可能超过美国，成为全球第一大经济体。当我们成
    
    </summary>
    
    
      <category term="自己写的大长布" scheme="https://github.com/skoll1/libateer.github.io/tags/%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E5%A4%A7%E9%95%BF%E5%B8%83/"/>
    
  </entry>
  
  <entry>
    <title>自己写的大长布</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/08/best-3-%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E5%A4%A7%E9%95%BF%E5%B8%83/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/08/best-3-自己写的大长布/</id>
    <published>2017-03-08T07:00:00.000Z</published>
    <updated>2017-03-08T07:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium, rhoncus tempor placerat fermentum, enim integer ad vestibulum volutpat. Nisl rhoncus turpis est, vel elit, congue wisi enim nunc ultricies sit, magna tincidunt. Maecenas aliquam maecenas ligula nostra, accumsan taciti. Sociis mauris in integer, a dolor netus non dui aliquet, sagittis felis sodales, dolor sociis mauris, vel eu libero cras. Interdum at. Eget habitasse elementum est, ipsum purus pede porttitor class, ut adipiscing, aliquet sed auctor, imperdiet arcu per diam dapibus libero duis. Enim eros in vel, volutpat nec pellentesque leo, temporibus scelerisque nec.<br>Ac dolor ac adipiscing amet bibendum nullam, massa lacus molestie ut libero nec, diam et, pharetra sodales eget, feugiat ullamcorper id tempor eget id vitae. Mauris pretium eget aliquet, lectus tincidunt. Porttitor mollis imperdiet libero senectus pulvinar. Etiam molestie mauris ligula eget laoreet, vehicula eleifend. Repellat orci eget erat et, sem cum, ultricies sollicitudin amet eleifend dolor nullam erat, malesuada est leo ac. Varius natoque turpis elementum est. Duis montes, tellus lobortis lacus amet arcu et. In vitae vel, wisi at, id praesent bibendum libero faucibus porta.  “校园合伙人”</p>
<p>创业大赛计划书</p>
<p>项目名称：寻找大学生的力量（找到创新的发动机）</p>
<p>参赛人：李巴特儿</p>
<p>所在学校：海南大学</p>
<p>项目简介：我是一名在校的大二学生，在经历了大一的生活后，遇到很多困难或困惑的事情，有了不少想法和体会。我觉得我的这个创业想法不仅可以完美的解决大学生活遇到的各种困难，如果坚持下去，对我们每一个人走出校园的生活都是大有裨益的。</p>
<p>我的创意是：以发掘大学生自身潜力，培养大学生良好习惯，传播大学生正能量，分享美好大学生活为目的，用一种游戏的方式建立一个大学生社交网站。<br>网站具体概况：</p>
<p>网站主要目标客户：所有在校大学生。以大学生为主要群体的好处是可以决定网站将要分享的知识和包含的内容。而且当所有人都是大学生的时候，他们自然而然的就成为了一个群体，他们有自己的思考方式，他们可以站到自己的立场上面思考问题，可以有效保护大学生这一弱势群体。可以有效净化网络环境，可以建立属于大学生的独特个性的思想文化阵地，寻找真正能够使大学生取得进步的信息，可以发展积极向上的网络文化，这个网站将像筛子一样过滤网上不健康，或者可能是骗子信息的东西。符合国家13五计划，在此基础上发展的新型主流媒体。</p>
<p>如果我是在校一个大学生，我可以在上面享受到这样的服务。首先关于课程方面的：网站将会按所学专业设置标签，相当于网站把全国的大学都集合在了一起，每一个标签所包含的专业都是全国所有专业的学生，这样可以做到知识共享，比如一些优秀的教学资源，一些共同遇到的问题可以共同讨论，整合成为一个体系。还能够以兴趣爱好为基础建立标签，我的目标是当我们有什么问题，爱好，想法时。我们在第一时间会来到这个网站上面来寻找，和别人讨论自己的想法。我要把所有人的视野放到全国的大学生，而不是仅仅同宿舍，或者同学校。（等将来建立了留学生交流区的时候，视野将扩展到国外，我们可以跟随留学的同学去看国外，留学的同学也可以随时就看到国内的学生的最新状况。）你可以马上找到全国所有感兴趣的人，找到朋友。每天都会选择时是热点来让全部人讨论，锻炼自己的思维。总之就是培养大视野，大环境的意识。可以让每一个大学生都可以平等的找到他们想要的任何信息消除不平等的信息壁垒。</p>
<p>在网站的方面：之前所提到的以游戏的方式建立社交网站。我们把每一个登录网站的学生都当成玩游戏的游戏者，只不过是平常游戏我们能得到的是装备，等级之类的对我们生活的完全没用的东西。在这场游戏中，玩家从平时的生活实践中得到的是诸如“坚持”“勇敢”“爱心”之类的称号奖励，他们通过继续坚持这种行为来加强标签。比如一个人坚持每天跑步一小时，我们就认为他是个坚持的人，他做事持之以恒。这种方式的想要的到的效果是“重估价值”，让人们可以从自己做的每一件事情都尝试着去学到些什么。养成思考的好习惯，网站可以根据得到的数据来给你推荐自己可能想要交的朋友（男朋友，女朋友）。在这个网站上面衡量一个人价值的东西不是财富或是相貌，而是实实在在你这个“人”。你可以勇敢，可以幽默，可以有一颗坚持的心，你都可以得到喝彩，你都可以给别人力量，你都可以成为别人的榜样。随着网络时代的到来，我们不可能脱离网络世界去生活，每天我们都自愿或追逐着接受网络大潮的洗礼或冲击。除了非洲撒哈拉沙漠以南的地区，世界上绝大多数的人都可以获得几乎无限的信息资料。然而，若没有一种超越少数精英而且始终存在的共同文化，那么，人们选择或遇到的具体问题信息和思想就取决于各种各样的趣味，倾向和利益。岁月流逝，我们每一个人都会对这个快快的文化的同时代人的世界缺乏共同认识，更不必说看待先辈的世界了。仿佛一种到处是水，但是却没有一滴水可以喝的感觉。市场的提供了民众需要的东西，但他不可能给予他们真正需要的东西。我们变的越来越没有耐心了，再也没法耐下性子来看大段的文字了，因为有太多的信息需药我们来过目了。“重估价值”取自一本书的名字，我们希望这个网站可以真正让人们重估自己平时行为的正真价值，而不是虚度光阴。我希望在这个虚拟世界中游戏者们通过自己的一步步挖掘，来找到中国大学生真正需要的心灵家园。每一个人分享的都是自己平时的感悟，而不是自己今天吃了什么，买了个什么衣服，也就是找到真正的价值。每一个人都可以分享自己看的书的好看的一段，写下自己的感悟，来让人么也学习。我们来发掘当代大学生究竟需要什么？而不是依靠那些我们可能需要仰望的人来告诉我们该怎么做！知识分子似乎过于频繁的表明“不知道他们在谈论什么了，尤其在经济学领域和军事技术领域”。而关于他们所说的责任。一群迥异而著名的知识分子，无论左派还是右派，都极其不负责任的漠然的倾向于向鼓励在同自己相隔遥远的安全距离之外的地方使用暴力。错误的观念最终会流血，但在每种情况下流的都是别人的血，这就是我们某些思想家对一切事情随心所欲，说三到四的原因。我们应该有自己的想法。也就是说我们应该有一个完全由我们自己构建的世界。每个人都会清楚的知道自己的进步和脚步，自己的一点一滴的对生活的体会，都会记录在这个上面，相当于每隔一段时间自己都可以看到的总结，据我了解，唯一有这个功能的就是考试，但是现在他能起到的作用也是有所限制的。既然是游戏，就必然会有竞争，这个游戏的竞争者不仅仅是每一个人，我们也会按学校为一个团体来比赛，按学校里每一个人的表现来换取相应的积分，来凑成学校的总积分来排名，不仅让我们看到差距，也让我们每一个人知道，获得尊重的是实践知识，而不是所谓的权威。我们也知道差距到底在哪？到那个时候，每一个学校的网站都变成这个网站的一个子网页， 每个学校的每个学生的每天表现状态都决定着这个学校当天的排名，你将是学校排名的贡献者。从这个角度可以吸引一部分未上大学的高中生，可以让他们切实的体会每一所大学的氛围环境，让他们提前了解自己喜欢的学校，不在让大学选择留下遗憾。我们还会设置各种各样的排行榜来让大家学习和了解。比如一段精彩的话，一次兼职自己了解到的事等等，通过分享自己的生活经历来分享一段故事，等到每一年，这个网站会挑选出最能代表大学生思想和价值观的东西编成一本书，作为年鉴和记录，每一个人的每一句话，都可能出现在这本书上。你将来在某个悠闲的下午在这个网站上会回味自己曾经为了理想的付出的努力，那一份执拗和坚持。<br>对社会的作用：通过对网站提供的关于大学生的各种大数据的分析，可以准确的了解当今大学生的所思所想所感，紧握当前大学生的脉络，在制定有关大学生的各种规则时能够有所参考，再遇到有关大学生的问题时可以到这个网站上来提取数据，这是对政府的作用。而对于当今的企业来说，可以作为企业实践社会责任和道德营销的地点，第一点，作为现今很流行的企业定制＋学校培养的模式我觉得可以借鉴，学生可以很早的了解到自己需要的是什么，企业需要的是什么。企业也可以很早的有意识的向大学生传输自己的企业文化，让大学生在学校里就可以提早学习一些社会上的本领。可以让企业提早发现人才，培养人才。对于生活在V时代的大学生来说，对于网络化的世界来说，对于新时代的人力资源总监来说。仅仅看到你的简历是不可能了解一个人的，你还需要看他的微博。但是现在我们提供了一个更好的地方来展示自己，就像应聘一个程序员最好有自己的GIT HUP账户一样，我们这个网站将起到这样的作用。这个网站上你的信息将会可能有和你的学位证书有一样同等的地位。假如你是一位主考官，你对一个人的简历很满意，但是网上有你的不良记录。同样在这个网站上，他会看到你的兴趣，你自己看了什么书，大学四年学了什么东西，甚至你坚持跑步了四年，甚至仅仅是一些小事，在我们的标签和他的认识重合之后。他认为你是一个做事认真，踏实肯学习的人，也许学历就可能没有那么重要的地位了。总之就最后的梦想是为每一个人在网站上面建立一个得到别人认可的标准或是记录自己每一次进步的日记。</p>
<p>对学校的作用：这个网站完全可以作为平时教学工作的补充，通过这个网站，学校自身不仅仅可以整合自己的优秀教学资源，而且可以更加客观的评价学生，更加具体的了解学生自身的情况，挖掘学生的潜力，现在什么都提倡智慧。现在可以在学校里实行智慧校园，比如老师上课点名可以用到。学生在这种方式的鼓励下不在是被动的学习，而是他们主动的去寻找，积极寻找学校里每一个可以学到东西的地方。</p>
<p>对海南本地的作用：众所周知，天涯论坛曾经是中国人思想盆碰撞火花的加速器，也让海南这个地方有了一点不一样的地方，就像西藏对某些人的意义一样，但是现在这个标签还没有得到强化，这个网站所起的作用将会和天涯社区的作用相得益彰，从曲线的方面来强化海南的独特名片，在互联网文化大省上面彻底坐实牢固的地位，依托“国际旅游岛”战略，海南不能仅仅发展硬件上的实力，更要进一步发展软实力，让人们来这个地方得到的不仅仅是身体上的放松，通过在这个网站上面的交流，得到的更是心灵上的旅行，这才是长久发展的计划，光靠景色是吸引不了人们的，关键是的有自己的特色。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lorem ipsum dolor sit amet, ligula suspendisse nulla pretium, rhoncus tempor placerat fermentum, enim integer ad vestibulum volutpat. Nis
    
    </summary>
    
    
      <category term="自己写的大长布" scheme="https://github.com/skoll1/libateer.github.io/tags/%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84%E5%A4%A7%E9%95%BF%E5%B8%83/"/>
    
  </entry>
  
  <entry>
    <title>我的书-2</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/08/best-2-%E6%88%91%E7%9A%84%E4%B9%A6-2/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/08/best-2-我的书-2/</id>
    <published>2017-03-08T05:48:48.000Z</published>
    <updated>2017-03-08T06:43:14.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>我相信太阳已经升起，不仅仅是因为我亲眼看到了太阳，是因为接着她的光芒，我看明白了所有其他的事物。</li>
<li>侦探小说迎合了我们内心的一种需要。即人类哪种想从看似彼此无关的各种事情中发现意义的渴望。尽管这些事情纷繁复杂，但在他们之中存在诸多的线索，这些线索如同事件背后的一件记号来帮助我们找到那些神秘现象的答案而所有的线索只有在更加强大的背景中才能发现。</li>
<li>对于世界上所观察到的每一件事，我们都希望看到背后的意义何在，对于我们看到的迥然不同的事实。是否有衣服更为宏大的图景能将它们联系在一起？</li>
<li>如流星般的事实，从天而降，然而，这些事实确未受过质疑而且零散无关，他们就像需要编织的美丽灌汤的缕缕细线，真想的解释需要讲这些连接起来，各种信息时刻冲击。</li>
<li>人一旦迷醉于自身的软弱，便会一味软弱下去，会在众人的目光下倒在街头，倒在地上，倒在比地面更低的地方。——米兰·昆德拉《不能承受的生命之轻》</li>
<li>当政府发行了过大的钞票，从而诱发了大量的通货膨胀，但是各种物价的上升并不是齐头并进的，总有一些东西是要先涨价的，而且，及时没有通货膨胀，东西也是要涨价的。</li>
<li>事件只要想明白了。抓紧事件办就不难。</li>
<li>位卑未敢忘国忧</li>
<li>中国的土地上发生了这么深刻的变化，为什么总有人把建设的轰鸣鸣声当成国家大厦的蹦嗒声，这非常奇怪，但是也是非常正常的，这就是中国，在改革开放的道路上，思想剧烈挣扎的中国。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;我相信太阳已经升起，不仅仅是因为我亲眼看到了太阳，是因为接着她的光芒，我看明白了所有其他的事物。&lt;/li&gt;
&lt;li&gt;侦探小说迎合了我们内心的一种需要。即人类哪种想从看似彼此无关的各种事情中发现意义的渴望。尽管这些事情纷繁复杂，但在他们之中存在诸多的线索，这些线索
    
    </summary>
    
      <category term="Read" scheme="https://github.com/skoll1/libateer.github.io/categories/Read/"/>
    
    
      <category term="一句话的事" scheme="https://github.com/skoll1/libateer.github.io/tags/%E4%B8%80%E5%8F%A5%E8%AF%9D%E7%9A%84%E4%BA%8B/"/>
    
  </entry>
  
</feed>
