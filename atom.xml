<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李巴特儿de小屋子</title>
  <subtitle>...触之不动...</subtitle>
  <link href="/libateer.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/skoll1/libateer.github.io/"/>
  <updated>2017-03-07T09:46:05.000Z</updated>
  <id>https://github.com/skoll1/libateer.github.io/</id>
  
  <author>
    <name>李巴特儿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js-1</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/07/best-1/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/07/best-1/</id>
    <published>2017-03-07T09:45:05.000Z</published>
    <updated>2017-03-07T09:46:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>1：对象只能和自己相等。甚至两个空对象都不相等。</p>
<p>2：基本类型都是不可以添加属性的。</p>
<p>3：利用arr.length可以做出很多精彩的操作。</p>
<p>4：typeOf ,instanceOf 分别是用来检测基本变量和对象的属性的。</p>
<p>5：typeOf {}:object,typeOf undefined:undefined,typeOf null:object,typeOf true boolean.</p>
<p>6:Boolean()是一个用来测试真假的函数，只会返回布尔值。Boolean({}),Boolean([]),返回true。表示里面有0个元素这是对的。。</p>
<p>7：Js中所有的数字都是浮点数。1===1.000。</p>
<p>8：函数声明具有提升的特性，这意味着我们可以用到下面定义的函数，但是var 声明的变量，只会提升变量的位置，而不会去管他的值得位置在哪。</p>
<p>9：数组可以有自己的属性，因为他本质上是一个对象。</p>
<p>10：在使用this的时候可以把不同层次的this保存起来就不会出现this指代不明的情况了。</p>
<p>11：立即执行函数可以使防止全局变量的出现。</p>
<p>12：闭包会持续的与内部变量连接，但是有的时候我们可能不需要这个东西.</p>
<p>13：数组当中可以添加对象，对象中也可以添加数组。</p>
<p>14：通过【】或是“.”来应用对象属性或数组元素的值来构成一个表达式。</p>
<p>15：用var 定义的变量，成为该定义域内的局部变量，这个变量在退出取得时候就会立刻被销毁</p>
<p>16：表示输入的最大和最小值，每个字母都是大写或者小写的。</p>
<p>17：不同类型之间加减号操作引发强制转换。</p>
<p>18：速度永远让人兴奋。</p>
<p>19：在编写dom脚本的时候，你会想当然的认为这个是dom元素节点，这是一种常见的错误，可以查看这个元素的nodeType属性，许多只能在元素节点的方法，是不能用在文本节点的。</p>
<p>20：函数名字命名的时候：getresult. isShow.</p>
<p>当需要引出对象内的函数，他所指的对象可能会发生变化，这个时候需要给他加个bind(此处是原来的对象名字)；让他找到回家的路就可以了。<br>var result=[];</p>
<p>for(var I=0;i&lt;6;i++){</p>
<p>result[I]=i……..result.push(i);都可以的。</p>
<p>result.push(function(){return I;}) 返回的都是空函数为什么？但是只要把这个变成立即执行函数就可以了。。</p>
<p>}<br>function pair(x,y){x=x||0;y=y||0;return  [x,y];}</p>
<p>pair():[0,0]</p>
<p>利用这个特性可以做到自动填充东西。可以给他后面加上数组。就可以填充名字了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1：对象只能和自己相等。甚至两个空对象都不相等。&lt;/p&gt;
&lt;p&gt;2：基本类型都是不可以添加属性的。&lt;/p&gt;
&lt;p&gt;3：利用arr.length可以做出很多精彩的操作。&lt;/p&gt;
&lt;p&gt;4：typeOf ,instanceOf 分别是用来检测基本变量和对象的属性的。&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="Code" scheme="https://github.com/skoll1/libateer.github.io/categories/Code/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/skoll1/libateer.github.io/2017/03/05/hello-world/"/>
    <id>https://github.com/skoll1/libateer.github.io/2017/03/05/hello-world/</id>
    <published>2017-03-05T12:10:52.000Z</published>
    <updated>2017-03-05T12:10:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
